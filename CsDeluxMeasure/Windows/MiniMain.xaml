<Window x:Class="CsDeluxMeasure.Windows.MiniMain"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:CsDeluxMeasure.Windows"
		xmlns:system="clr-namespace:System;assembly=mscorlib"
		xmlns:revitSupport="clr-namespace:CsDeluxMeasure.RevitSupport"
		xmlns:support="clr-namespace:CsDeluxMeasure.Windows.Support"
		Title="Delux Measure"
		WindowStyle="None"
		AllowsTransparency="True"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		mc:Ignorable="d"
		Background="#00020202"
		Foreground="White"
		ResizeMode="NoResize"
		SizeToContent="WidthAndHeight"
		Icon="/CsDeluxMeasure;component/Resources/CyberStudio Icon.png"
		Topmost="True"
		WindowStartupLocation="Manual"
		Focusable="False"
		Opacity="{Binding ElementName=slider,
											Path=Value}"
		MouseDown="MiniMain_OnMouseDown"
		Closing="MiniMain_OnClosing"
		Loaded="MiniMain_OnLoaded"
		Activated="Window_Activated"
		MouseEnter="Window_MouseEnter"
		MouseLeftButtonUp="Window_MouseLeftButtonUp"
		>
	<!--  MouseLeave="Window_MouseLeave"  -->
	<!--  MouseUp="Window_MouseUp"  -->
	<!--  MouseLeftButtonDown="Window_MouseLeftButtonDown"  -->
	<!--  Background="{DynamicResource Normal.Window.Background}"  -->

	<Window.Resources>
		<ResourceDictionary>


			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterColorList.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
				<ResourceDictionary Source="Support/CsSlider.xaml" />
			</ResourceDictionary.MergedDictionaries>




			<support:InvertBool x:Key="InvertBool" />

			<system:Double x:Key="UnitsTitleFontSize">12</system:Double>
			<system:Double x:Key="UnitsValueOpacity">1</system:Double>

			<GridLength x:Key="c0">14</GridLength>
			<GridLength x:Key="c1">20</GridLength>
			<GridLength x:Key="c2">90</GridLength>

			<system:String x:Key="sample">99,999&apos;-11.999&quot;</system:String>
			<system:String x:Key="sampleArea">123,456,789.123456 in2</system:String>
			<system:String x:Key="sampleAngle">180.00°</system:String>

			<SolidColorBrush x:Key="Unit.Background" Color="{StaticResource Gray.450}" />
			<SolidColorBrush x:Key="Pick.Btn.Foreground.Disabled" Color="{StaticResource Gray.550}" />

			<Style TargetType="{x:Type TextBlock}">
				<Setter Property="Foreground" Value="White" />
				<Setter Property="FontSize" Value="10" />
				<Setter Property="FontFamily" Value="Tahoma" />
			</Style>

			<Style TargetType="{x:Type TextBox}">
				<Setter Property="Foreground" Value="White" />
				<Setter Property="FontSize" Value="10" />
				<Setter Property="FontFamily" Value="Tahoma" />
			</Style>

			<Style x:Key="Unit.Tbx"
					TargetType="TextBox"
					BasedOn="{StaticResource {x:Type TextBox}}"
					>
				<Setter Property="Opacity" Value="{StaticResource UnitsValueOpacity}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Padding" Value="0,1,0,2" />
				<Setter Property="TextAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="Background" Value="{StaticResource Unit.Background}" />
			</Style>

			<Style x:Key="Unit.Value.Tblk"
					TargetType="TextBlock"
					BasedOn="{StaticResource {x:Type TextBlock}}"
					>
				<Setter Property="Opacity" Value="{StaticResource UnitsValueOpacity}" />
				<Setter Property="Padding" Value="4,1,4,2" />
				<Setter Property="TextAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="Background" Value="{StaticResource Unit.Background}" />
				<Setter Property="FontSize" Value="11" />
			</Style>

			<Style x:Key="Unit.Tblk"
					TargetType="TextBlock"
					BasedOn="{StaticResource {x:Type TextBlock}}"
					>
				<Setter Property="Opacity" Value="{StaticResource UnitsValueOpacity}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="TextAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="FontSize" Value="8" />
			</Style>

			<Style x:Key="Unit.Ttl"
					TargetType="TextBlock"
					BasedOn="{StaticResource Unit.Tblk}"
					>
				<Setter Property="Opacity" Value="{StaticResource UnitsValueOpacity}" />
				<Setter Property="HorizontalAlignment" Value="Right" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Margin" Value="0,0,2,0" />
				<Setter Property="Foreground" Value="White" />
			</Style>

		</ResourceDictionary>
	</Window.Resources>

	<Border Background="#000000"
			BorderThickness="0.75"
			BorderBrush="Red"
			CornerRadius="10"
			>
		<!--  Background="#5F000000"  -->

		<DockPanel Margin="4">

			<StackPanel VerticalAlignment="Bottom"
					DockPanel.Dock="Right"
					Orientation="Vertical"
					>


				<Button x:Name="Btn_Dialog"
						Content="Dialog"
						Margin="0,3,0,0"
						Width="40"
						Height="18"
						Padding="0,-1,0,0"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						VerticalContentAlignment="Top"
						FontSize="12"
						Background="Black"
						BorderThickness=".5"
						BorderBrush="DimGray"
						IsEnabled="{Binding MainHidden}"
						Focusable="False"
						Opacity="1"
						Click="Btn_Dialog_OnClick"
						>
					<!--  IsEnabled="{Binding HideMain, FallbackValue=true}"  -->
					<!--  IsEnabled="{Binding HideMain, FallbackValue=true, Converter={StaticResource InvertBool}}"  -->

					<!--  Style="{StaticResource Button.Normal.Style}"  -->

					<Button.Style>
						<Style TargetType="Button"
								BasedOn="{StaticResource Button.Normal.Style}"
								>

							<Setter Property="Foreground" Value="White">
							</Setter>

						</Style>
					</Button.Style>

					<Button.Resources>

						<Style TargetType="{x:Type Border}">
							<Setter Property="CornerRadius" Value="5" />
						</Style>
					</Button.Resources>
				</Button>


				<Button x:Name="Btn_Pick"
						Content="Pick"
						Margin="0,3,0,0"
						Width="40"
						Height="18"
						Padding="0,-1,0,0"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						VerticalContentAlignment="Top"
						FontSize="12"
						Background="Black"
						BorderThickness=".5"
						BorderBrush="DimGray"
						Focusable="False"
						Opacity="1"
						Click="Btn_Pick_OnClick"
						>
					<!--  Style="{StaticResource Button.Normal.Style}"  -->
					<Button.Style>
						<Style TargetType="Button"
								BasedOn="{StaticResource Button.Normal.Style}"
								>
							<Setter Property="Foreground" Value="White" />
						</Style>
					</Button.Style>

					<Button.Resources>
						<Style TargetType="{x:Type Border}">
							<Setter Property="CornerRadius" Value="5" />
						</Style>
					</Button.Resources>
				</Button>


				<Button x:Name="Btn_Exit"
						Content="Exit"
						Margin="0,3,0,0"
						Width="40"
						Height="18"
						Padding="0,-1,0,0"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						VerticalContentAlignment="Top"
						FontSize="12"
						Background="Black"
						Foreground="White"
						BorderThickness=".5"
						BorderBrush="DimGray"
						Focusable="False"
						Opacity="1"
						Style="{StaticResource Button.Normal.Style}"
						Click="Btn_Exit_OnClick"
						>
					<Button.Resources>
						<Style TargetType="{x:Type Border}">

							<Setter Property="CornerRadius" Value="5" />
						</Style>
					</Button.Resources>
				</Button>



			</StackPanel>

			<Grid>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="24" />
					<ColumnDefinition Width="{StaticResource c0}" />
					<ColumnDefinition Width="{StaticResource c2}" />
					<ColumnDefinition Width="{StaticResource c1}" />
					<ColumnDefinition Width="{StaticResource c2}" />
					<ColumnDefinition Width="{StaticResource c1}" />
					<ColumnDefinition Width="{StaticResource c2}" />
					<ColumnDefinition Width="3" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition Height="3" />
					<RowDefinition Height="*" />
					<RowDefinition Height="14" />
					<RowDefinition Height="*" />
					<RowDefinition Height="3" />
					<RowDefinition Height="*" />

				</Grid.RowDefinitions>

				<TextBlock Grid.Column="0"
						Grid.Row="0"
						Margin="0,0,0,2"
						HorizontalAlignment="Center"
						FontSize="{StaticResource UnitsTitleFontSize}"
						Text="1st"
						Style="{StaticResource Unit.Tblk}"
						/>



				<TextBlock Grid.Column="1"
						Grid.Row="0"
						Text="X"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist1X"
						Grid.Column="2"
						Grid.Row="0"
						Text="{Binding Prime.P_x,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>

				<TextBlock Grid.Column="3"
						Grid.Row="0"
						Text="Y"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist1Y"
						Grid.Column="4"
						Grid.Row="0"
						Text="{Binding Prime.P_y,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>

				<TextBlock Grid.Column="5"
						Grid.Row="0"
						Text="Z"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist1Z"
						Grid.Column="6"
						Grid.Row="0"
						Text="{Binding Prime.P_z,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>

				<!--  XY  -->
				<TextBlock Grid.Column="1"
						Grid.Row="2"
						Text="XY"
						Style="{StaticResource Unit.Ttl}"
						/>



				<TextBlock x:Name="Tblk_Dist1XY"
						Grid.Column="2"
						Grid.Row="2"
						Text="{Binding Prime.P_xy,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>


				<!--  begin xy angle  -->
				<TextBlock Grid.Column="3"
						Grid.Row="2"
						Text="XY°"
						>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Ttl}"
								>
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Visibility" Value="Visible">
									</Setter>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>

				<TextBlock x:Name="Tblk_AngXy"
						Grid.Column="4"
						Grid.Row="2"
						Text="{Binding Prime.A_XY, Mode=OneWay, FallbackValue={StaticResource sampleAngle}}"
						>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Value.Tblk}"
								>
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<!--  end xy angle  -->


				<!-- begin area  or xz angle  -->
				<TextBlock Grid.Column="5"
						Grid.Row="2"
				>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Ttl}"
								>
							<Setter Property="Text" Value="Area">
							</Setter>
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Text" Value="XZ°"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>

				<TextBlock x:Name="Tblk_Dist1Area"
						Grid.Column="6"
						Grid.Row="2"
						>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Value.Tblk}"
								>
							<Setter Property="Text" Value="{Binding Prime.Area, Mode=OneWay, FallbackValue={StaticResource sampleArea}}">
							</Setter>
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Text" Value="{Binding Prime.A_XZ, Mode=OneWay}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<!-- end area  or xz angle  -->




				<!--  divider  -->

				<Line x:Name="Line"
						Grid.Column="0"
						Grid.Row="3"
						Grid.ColumnSpan="7"
						Margin="0,0,0,1"
						VerticalAlignment="Center"
						StrokeThickness="0.5"
						Stroke="DarkRed"
						Y2="0"
						X2="{Binding ElementName=Line,
												 Path=ActualWidth}"
						Y1="0"
						X1="0"
						/>


				<Slider x:Name="slider"
						Grid.Column="2"
						Grid.Row="3"
						Grid.ColumnSpan="5"
						Margin="0,0,30,1"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center"
						Value="0.5"
						IsDirectionReversed="True"
						Minimum="0.2"
						Maximum="1"
						SmallChange="0.01"
						LargeChange="0.1"
						MouseEnter="slider_MouseEnter"
						MouseLeave="slider_MouseLeave"
						Style="{DynamicResource SliderStyle1}"
						/>


				<!--  Secondary  -->

				<TextBlock Grid.Column="0"
						Grid.Row="4"
						Margin="0,0,0,2"
						HorizontalAlignment="Center"
						FontSize="{StaticResource UnitsTitleFontSize}"
						Text="2nd"
						Style="{StaticResource Unit.Tblk}"
						/>


				<TextBlock Grid.Column="1"
						Grid.Row="4"
						Text="X"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist2X"
						Grid.Column="2"
						Grid.Row="4"
						Text="{Binding Second.P_x,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>

				<TextBlock Grid.Column="3"
						Grid.Row="4"
						Text="Y"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist2Y"
						Grid.Column="4"
						Grid.Row="4"
						Text="{Binding Second.P_y,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>

				<TextBlock Grid.Column="5"
						Grid.Row="4"
						Text="Z"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist2Z"
						Grid.Column="6"
						Grid.Row="4"
						Text="{Binding Second.P_z,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>


				<!--  XY  -->
				<TextBlock Grid.Column="1"
						Grid.Row="6"
						Text="XY"
						Style="{StaticResource Unit.Ttl}"
						/>

				<TextBlock x:Name="Tblk_Dist2XY"
						Grid.Column="2"
						Grid.Row="6"
						Text="{Binding Second.P_xy,
													 Mode=OneWay,
													 FallbackValue={StaticResource sample}}"
						Style="{StaticResource Unit.Value.Tblk}"
						/>

				<!--  begin yz angle  -->
				<TextBlock Grid.Column="3"
						Grid.Row="6"
						Text="YZ°"
				>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Ttl}"
						>
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Visibility" Value="Visible">
									</Setter>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>

				<TextBlock
						Grid.Column="4"
						Grid.Row="6"
						Text="{Binding Prime.A_YZ, Mode=OneWay, FallbackValue={StaticResource sampleAngle}}"
				>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Value.Tblk}"
						>
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<!--  end xy angle  -->



				<!-- begin area  or xyz angle  -->
				<TextBlock Grid.Column="5"
						Grid.Row="6"
						>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Ttl}"
								>
							<Setter Property="Text" Value="Area">
							</Setter>
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Text" Value="XYZ°"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>

				<TextBlock x:Name="Tblk_Dist2Area"
						Grid.Column="6"
						Grid.Row="6"
						>
					<TextBlock.Style>
						<Style TargetType="TextBlock"
								BasedOn="{StaticResource Unit.Value.Tblk}"
								>
							<Setter Property="Text" Value="{Binding Prime.Area, Mode=OneWay, FallbackValue={StaticResource sampleArea}}">
							</Setter>
							<Style.Triggers>
								<DataTrigger Value="true" Binding="{Binding Prime.Points.Is3D}">
									<Setter Property="Text" Value="{Binding Prime.A_XYZ, Mode=OneWay}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBlock.Style>
				</TextBlock>
				<!-- end area  or xyz angle  -->


			</Grid>

		</DockPanel>
	</Border>

</Window>
