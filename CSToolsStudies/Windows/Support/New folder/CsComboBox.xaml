<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:custom="clr-namespace:CSToolsStudies.Windows.Support"
		>
		<!-- xmlns:custom="clr-namespace:CSToolsStudies.Windows.Support" -->

	<custom:AddConverter x:Key="AddConverter" />

	<SolidColorBrush x:Key="ScrollBarBkg" Color="#222222" />
	<SolidColorBrush x:Key="ItemsControl.Text.Disabled" Color="{DynamicResource Gray.600}" />
	<SolidColorBrush x:Key="ItemsControl.Subject.Background.Normal" Color="{DynamicResource Blue.450}" />
	<SolidColorBrush x:Key="ItemsControl.Text.Normal" Color="{DynamicResource Gray.950}" />
	<Color x:Key="DisabledForegroundColor">#FF888888</Color>

	<!-- custom properties
	MouseOverBrush
	NotEnabledBrush
	DropDownBrush
	DropDownMaxWidth
	DropDownBrush
	DropDownWidthAdjustment


	
	-->


	<Style x:Key="CsComboBoxStyle"
			TargetType="ComboBox"
			>
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" />
		<Setter Property="Foreground" Value="{StaticResource ItemsControl.Text.Normal}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Border x:Name="bdr_cbt1"
							Margin="0,0,0,0"
							Padding="4,0,4,0"
							BorderThickness="0"
							CornerRadius="3"
							>
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
								<Style.Triggers>
									<!--  true  -->
									<Trigger Property="IsMouseOver" Value="true">
										<Setter Property="Background" Value="{Binding Path=(custom:CsComboBoxAp.MouseOverBrush), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</Trigger>
									<Trigger Property="IsEnabled" Value="False">
										<!--  false  -->
										<Setter Property="TextElement.Foreground" Value="{StaticResource ItemsControl.Text.Disabled}" />
										<Setter Property="Background" Value="{Binding Path=(custom:CsComboBoxAp.NotEnabledBrush), RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Border.Style>

						<Grid x:Name="cbx_gd1"
								Margin="0"
								HorizontalAlignment="Stretch"
								>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<ToggleButton x:Name="ToggleButton"
									Grid.Column="0"
									Grid.ColumnSpan="2"
									Padding="0"
									Background="{TemplateBinding Background}"
									IsChecked="{Binding IsDropDownOpen,
																			Mode=TwoWay,
																			RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press"
									Focusable="false"
									>
								<!--  Template="{StaticResource CbxEx1Togg1}"  -->
								<ToggleButton.Template>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Grid Margin="0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="16" />
												<ColumnDefinition />
											</Grid.ColumnDefinitions>

											<!--  needed to create extend the clickable region  -->
											<Border x:Name="Border"
													Grid.Column="0"
													Background="Transparent"
													BorderThickness="1"
													CornerRadius="2"
													/>
											<Border Grid.Column="0"
													Grid.ColumnSpan="2"
													Margin="0"
													Padding="0"
													Background="Transparent"
													CornerRadius="2,0,0,2"
													/>
											<!--  Background="Transparent"  -->
											<Path x:Name="Arrow"
													Grid.Column="0"
													Margin="0,1.5,0,0"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="M 0,0 4,8 8,0 z"
													Fill="red"
													RenderTransformOrigin="0.5,0.5"
													>
												<Path.RenderTransform>
													<TransformGroup>
														<RotateTransform Angle="-90" />
													</TransformGroup>
												</Path.RenderTransform>
											</Path>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsChecked" Value="true">
												<Setter TargetName="Arrow" Property="Fill" Value="OrangeRed" />
												<Setter TargetName="Arrow" Property="RenderTransform">
													<Setter.Value>
														<RotateTransform Angle="0" />
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>

								</ToggleButton.Template>

							</ToggleButton>

							<ContentPresenter x:Name="ContentSite"
									Content="{TemplateBinding SelectionBoxItem}"
									Grid.Column="1"
									Margin="0,0,0,0"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									IsHitTestVisible="False"
									ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
									/>

							<TextBox x:Name="PART_EditableTextBox"
									Grid.Column="1"
									Margin="0"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Foreground="{TemplateBinding Foreground}"
									IsReadOnly="{TemplateBinding IsReadOnly}"
									Focusable="True"
									Visibility="Hidden"
									Style="{x:Null}"
									>
								<!--  Template="{StaticResource CbxEx1Tbx1}"  -->
								<TextBox.Template>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border x:Name="PART_ContentHost"
												Background="{TemplateBinding Background}"
												Focusable="False"
												/>
									</ControlTemplate>
								</TextBox.Template>

							</TextBox>

							<!-- MinWidth="{TemplateBinding custom:CsComboBoxAttached.DropDownMinWidth}" -->
							<Popup x:Name="Popup"
									Grid.Column="0"
									Margin="0"
									HorizontalAlignment="Left"
									MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(custom:CsComboBoxAp.DropDownMaxWidth)}"
									IsOpen="{TemplateBinding IsDropDownOpen}"
									Focusable="False"
									Placement="Bottom"
									PopupAnimation="Slide"
									HorizontalOffset="0"
									PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
									>
									<Popup.MinWidth>
										<MultiBinding Converter="{StaticResource AddConverter}">
											<Binding Path="ActualWidth"
													RelativeSource="{RelativeSource TemplatedParent}"
													FallbackValue="0.0"
											/>
											<Binding Path="(custom:CsComboBoxAp.DropDownWidthAdjustment)"
													RelativeSource="{RelativeSource TemplatedParent}"
													FallbackValue="0.0"
											/>
										</MultiBinding>
									</Popup.MinWidth>

								<Border x:Name="DropDownBorder"
										Margin="0"
										Padding="5,5,2,5"
										HorizontalAlignment="Stretch"
										Background="{Binding Path=(custom:CsComboBoxAp.DropDownBrush),
																				 RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										BorderThickness="0"
										BorderBrush="Transparent"
										CornerRadius="6"
										>

									<Grid x:Name="DropDownGrid"
											Margin="0"
											MaxHeight="{TemplateBinding MaxDropDownHeight}"
											HorizontalAlignment="Stretch"
											Background="{Binding Path=(custom:CsComboBoxAp.DropDownBrush),
																					 RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
											SnapsToDevicePixels="True"
											>

										<ScrollViewer Padding="0"
												custom:CsScrollBarAp.ScrollBarWidth="{TemplateBinding custom:CsScrollBarAp.ScrollBarWidth}"
												SnapsToDevicePixels="True"
												HorizontalScrollBarVisibility="Auto"
												Template="{DynamicResource CsScrollViewerCt}"
												>
											<StackPanel IsItemsHost="True"
													KeyboardNavigation.DirectionalNavigation="Contained"
													/>
										</ScrollViewer>

									</Grid>
								</Border>
							</Popup>


							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
													Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
													>
												<EasingColorKeyFrame Value="{StaticResource DisabledForegroundColor}"
														KeyTime="0"
														/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
													Storyboard.TargetProperty="(UIElement.Visibility)"
													>
												<DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}"
														KeyTime="0"
														/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite"
													Storyboard.TargetProperty="(UIElement.Visibility)"
													>
												<DiscreteObjectKeyFrame Value="{x:Static Visibility.Hidden}"
														KeyTime="0"
														/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Uneditable" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</Border>

					<!-- </Border> -->
					<ControlTemplate.Triggers>

						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger Property="AllowsTransparency" Value="true" SourceName="Popup">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>

			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>