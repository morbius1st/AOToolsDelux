<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:cs="clr-namespace:CSToolsStudies.Windows.Support"
		>

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Windows/ResourceFiles/XamlResources/MasterColorList.xaml" />
		<ResourceDictionary Source="/Windows/Skin/CyberStudioSkin.xaml" />
	</ResourceDictionary.MergedDictionaries>


	<Style x:Key="OptionMarkFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0"
							SnapsToDevicePixels="true"
							Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							StrokeDashArray="1 2"
							StrokeThickness="1"
							/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CkbxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2"
							SnapsToDevicePixels="true"
							Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							StrokeDashArray="1 2"
							StrokeThickness="1"
							/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Lv1.CheckboxStyle"
			TargetType="{x:Type CheckBox}"
			>
		<Setter Property="IsEnabled" Value="True" />
		<Setter Property="Padding" Value="2,0,0,0" />
		<Setter Property="Margin" Value="8,-2,8,2" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource CkbxFocusVisual}" />
		<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
		<Setter Property="Foreground" Value="{StaticResource Fg.IsSel}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Border x:Name="checkBoxControlBorder"
							BorderBrush="Transparent"
							BorderThickness="1"
							CornerRadius="6"
							Padding="{TemplateBinding Padding}"
							>

						<Grid x:Name="templateRoot"
								Background="Transparent"
								HorizontalAlignment="Left"
								SnapsToDevicePixels="True"
								>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Border x:Name="checkBoxBorder"
									Grid.Column="0"
									Width="{Binding RelativeSource={RelativeSource Self},
																	Path=ActualHeight}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1"
									Margin="{Binding RelativeSource={RelativeSource Self},
																	 Path=(cs:CsCheckBoxAp.CheckBoxBoxMargin)}"
									VerticalAlignment="Stretch"
									>

							</Border>

							<Grid x:Name="markGrid"
									Grid.Column="0"
									>
								<Path x:Name="optionMark"
										Data="F0 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
										Fill="{StaticResource OptionMark.Static.Glyph}"
										Margin="{Binding RelativeSource={RelativeSource Self},
																		 Path=(cs:CsCheckBoxAp.CheckBoxCheckMargin)}"
										Opacity="0"
										Stretch="Uniform"
										Stroke="white"
										StrokeThickness="0"
										VerticalAlignment="Stretch"
										/>
								<Rectangle x:Name="indeterminateMark"
										Fill="{StaticResource OptionMark.Indeterminant.Fill}"
										Margin="{Binding RelativeSource={RelativeSource Self},
																		 Path=(cs:CsCheckBoxAp.CheckBoxBoxMargin)}"
										Opacity="0"
										VerticalAlignment="Stretch"
										/>

							</Grid>

							<ContentPresenter x:Name="contentPresenter"
									Grid.Column="1"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="5,0,0,1"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>

						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="checkBoxControlBorder" Value="{StaticResource OptionMark.MouseOver.Border}" />
							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
							<Setter Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource Fg.NotSel}" />
							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
							<Setter Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
							<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}" />
							<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}" />
							<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
							<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Opacity" TargetName="optionMark" Value="1" />
							<Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter Property="Opacity" TargetName="optionMark" Value="0" />
							<Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>





</ResourceDictionary>