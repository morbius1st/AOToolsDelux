<Window x:Name="win"
		x:Class="CSToolsStudies.Windows.Test1"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:CSToolsStudies.Windows"
		xmlns:cs="clr-namespace:CSToolsStudies.Windows.Support"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:ws="clr-namespace:CSToolsStudies.Windows.Support"
		Title="Test1"
		Height="1200"
		Width="1200"
		Background="{DynamicResource Normal.Window.Background}"
		DataContext="{Binding ElementName=win}"
		FontSize="{DynamicResource FontSize.Normal}"
		Foreground="White"
		Loaded="win_Loaded"
		LocationChanged="win_LocationChanged"
		ResizeMode="NoResize"
		mc:Ignorable="d"
		>

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterColorList.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
				<!-- <ResourceDictionary Source="Support/CsScrollViewer.xaml" /> -->
				<!-- <ResourceDictionary Source="Support/CsScrollBar.xaml" /> -->
			</ResourceDictionary.MergedDictionaries>


			<!--
				conditions
				
				BASE:
				not locked / is selected / not editing
				(IsSelected == true && IsEditing == false)
				
				762
				not locked / is selected / is editing
				(IsSelected == true && IsEditing == true)
				
				981
				not locked / not selected (na locked / na editable)
				(IsSelected == false)
				
				1200
				not locked / is selected / no editing
				(IsSelected == true && NoEditing == true)
				
				1498
				is locked / is selected / na editing
				(IsSelected == true && IsLocked == true)
			-->

			<!--#region > values-->

			<sys:Boolean x:Key="IsLocked">
				False
			</sys:Boolean>
			<sys:Boolean x:Key="IsSelected">
				False
			</sys:Boolean>
			<ws:NullableBool x:Key="IsEditing"
					b="true"
					/>

			<sys:Double x:Key="FontSize.XLarge">
				18
			</sys:Double>
			<!--  header size  -->
			<sys:Double x:Key="FontSize.Large">
				15
			</sys:Double>
			<!--  typical font size  -->
			<sys:Double x:Key="FontSize.Normal">
				13
			</sys:Double>
			<sys:Double x:Key="FontSize.Smaller">
				12
			</sys:Double>
			<sys:Double x:Key="FontSize.Small">
				11
			</sys:Double>
			<sys:Double x:Key="FontSize.XSmall">
				10
			</sys:Double>

			<GridLength x:Key="C1">220*</GridLength>
			<GridLength x:Key="C2">620*</GridLength>

			<sys:Double x:Key="Normal.CornerRad">
				6
			</sys:Double>
			<sys:Double x:Key="Small.CornerRad">
				5
			</sys:Double>


			<CornerRadius x:Key="Normal.CornerRadius"
					BottomLeft="{StaticResource Normal.CornerRad}"
					BottomRight="{StaticResource Normal.CornerRad}"
					TopLeft="{StaticResource Normal.CornerRad}"
					TopRight="{StaticResource Normal.CornerRad}"
					/>




			<SolidColorBrush x:Key="Header.Background" Color="{StaticResource True.Green}" />

			<SolidColorBrush x:Key="Lv1.Item.Panel.Bkg.Nml" Color="{StaticResource Blue.200}" />


			<SolidColorBrush x:Key="Foreground.Normal" Color="White" />
			<SolidColorBrush x:Key="Foreground.Unselected" Color="{StaticResource Gray.650}" />


			<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
			<SolidColorBrush x:Key="OptionMark.Static.Background" Color="{StaticResource Gray.600}" />
			<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
			<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
			<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
			<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
			<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
			<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
			<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
			<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
			<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
			<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />




			<Style x:Key="OptionMarkFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="14,0,0,0"
									SnapsToDevicePixels="true"
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									StrokeDashArray="1 2"
									StrokeThickness="1"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="CbxFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2"
									SnapsToDevicePixels="true"
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									StrokeDashArray="1 2"
									StrokeThickness="1"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Lv1.CheckboxStyle"
					TargetType="{x:Type CheckBox}"
					>
				<Setter Property="IsEnabled" Value="True" />
				<Setter Property="Padding" Value="2,0,0,0" />
				<Setter Property="Margin" Value="8,-2,8,2" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource CbxFocusVisual}" />
				<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
				<Setter Property="Foreground" Value="{StaticResource Foreground.Normal}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Border x:Name="checkBoxControlBorder"
									BorderBrush="Transparent"
									BorderThickness="1"
									CornerRadius="6"
									Padding="{TemplateBinding Padding}"
									>

								<Grid x:Name="templateRoot"
										Background="Transparent"
										SnapsToDevicePixels="True"
										>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<Border x:Name="checkBoxBorder"
											Grid.Column="0"
											Width="{Binding RelativeSource={RelativeSource Self},
																			Path=ActualHeight}"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="0"
											HorizontalAlignment="Stretch"
											Margin="{Binding TemplatedParent.(cs:CsCheckBoxAp.CheckBoxBoxMargin),
																			 FallbackValue='4'}"
											VerticalAlignment="Stretch"
											>

									</Border>

									<Grid x:Name="markGrid">

										<!--<Rectangle Width="{Binding RelativeSource={RelativeSource Self},
																				Path=Height}"
												Fill="{TemplateBinding Background}"
												/>-->
										<Path x:Name="optionMark"
												Data="F0 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
												Fill="{StaticResource OptionMark.Static.Glyph}"
												HorizontalAlignment="Stretch"
												Margin="1.5"
												Opacity="0"
												Stretch="Uniform"
												VerticalAlignment="Stretch"
												/>
										<Rectangle x:Name="indeterminateMark"
												Fill="{StaticResource OptionMark.Static.Glyph}"
												Margin="0"
												Opacity="0"
												/>

									</Grid>

									<ContentPresenter x:Name="contentPresenter"
											Grid.Column="1"
											Focusable="False"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											Margin="5,0,0,1"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											/>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>

								<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
									<Setter Property="Foreground" Value="{StaticResource Foreground.Unselected}" />
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
								<Trigger Property="HasContent" Value="true">
									<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
								</Trigger>
								<!-- <Setter Property="Padding" Value="4,-1,0,0" /> -->
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="BorderBrush" TargetName="checkBoxControlBorder" Value="{StaticResource OptionMark.MouseOver.Border}" />
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
									<Setter Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}" />
									<Setter Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
									<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}" />
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}" />
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Opacity" TargetName="optionMark" Value="1" />
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
								</Trigger>
								<Trigger Property="IsChecked" Value="{x:Null}">
									<Setter Property="Opacity" TargetName="optionMark" Value="0" />
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			<sys:Int32 x:Key="Hlight_Col">
				2
			</sys:Int32>
			<sys:Int32 x:Key="Hlight_Row">
				2
			</sys:Int32>
			<sys:Int32 x:Key="Image_Col">
				1
			</sys:Int32>
			<sys:Int32 x:Key="Image_Row">
				3
			</sys:Int32>
			<sys:Int32 x:Key="Action1_Col">
				1
			</sys:Int32>
			<sys:Int32 x:Key="Action1_Row">
				2
			</sys:Int32>
			<sys:Int32 x:Key="SubTitle_Col">
				0
			</sys:Int32>
			<sys:Int32 x:Key="SubTitle_Row">
				1
			</sys:Int32>
			<sys:Int32 x:Key="Ckbx1_Col">
				0
			</sys:Int32>
			<sys:Int32 x:Key="Ckbx1_Row">2</sys:Int32>



			<sys:Int32 x:Key="Ckbx2_Col">
				0
			</sys:Int32>
			<sys:Int32 x:Key="Ckbx2_Row">
				2
			</sys:Int32>

			<sys:Int32 x:Key="Action2_Col">
				0
			</sys:Int32>
			<sys:Int32 x:Key="Action2_Row">
				3
			</sys:Int32>
			<sys:Int32 x:Key="Cbx_Col">
				1
			</sys:Int32>
			<sys:Int32 x:Key="Cbx_Row">3</sys:Int32>
			<!--#endregion-->


			<GridLength x:Key="Lv1RowHeight">26</GridLength>


			<!--  icons  -->
			<Geometry x:Key="IconGeomNoEditing">
				F0 M 18.886719 14.208984 C 18.886719 16.656902 18.019205 18.75 16.28418 20.488281 C 14.549153 22.226562 12.457682 23.095703 10.009766 23.095703 C 7.555339 23.095703 5.460612 22.226562 3.725586 20.488281 C 1.990561 18.75 1.123047 16.656902 1.123047 14.208984 C 1.123047 11.761068 1.990561 9.671225 3.725586 7.939453 C 5.460612 6.207683 7.555339 5.341797 10.009766 5.341797 C 12.457682 5.341797 14.549153 6.207683 16.28418 7.939453 C 18.019205 9.671225 18.886719 11.761068 18.886719 14.208984 Z M 10 7.021484 C 8.333334 7.021485 6.852214 7.535809 5.556641 8.564453 L 15.654297 18.671875 C 16.676432 17.376303 17.1875 15.888672 17.1875 14.208984 C 17.1875 12.223308 16.487629 10.528972 15.087891 9.125977 C 13.68815 7.722982 11.992188 7.021485 10 7.021484 Z M 4.365234 9.755859 C 3.323568 11.057943 2.802734 12.542318 2.802734 14.208984 C 2.802734 16.207684 3.505859 17.9069 4.912109 19.306641 C 6.318359 20.706381 8.014323 21.40625 10 21.40625 C 11.666666 21.40625 13.157552 20.888672 14.472656 19.853516 Z
			</Geometry>

			<Geometry x:Key="IconGeomIsSelected">
				F0 M 17.93457 5.087891 C 18.188477 5.335287 18.362629 5.581055 18.457031 5.825195 C 18.551432 6.069336 18.598633 6.295573 18.598633 6.503906 C 18.598633 6.679688 18.574219 6.839193 18.525391 6.982422 C 18.476562 7.125652 18.426105 7.24935 18.374023 7.353516 C 18.302408 7.470703 18.227539 7.578125 18.149414 7.675781 C 18.110352 7.727865 18.055012 7.794598 17.983398 7.875977 C 17.911783 7.957357 17.836914 8.041992 17.758789 8.129883 C 17.680664 8.217773 17.604166 8.302409 17.529297 8.383789 C 17.454426 8.46517 17.394205 8.531901 17.348633 8.583984 C 17.244465 8.675131 17.127277 8.720704 16.99707 8.720703 C 16.866861 8.720704 16.743164 8.668621 16.625977 8.564453 L 14.604492 6.552734 C 14.500324 6.448568 14.448242 6.32487 14.448242 6.181641 C 14.448242 6.044922 14.49707 5.927734 14.594727 5.830078 C 14.640299 5.784506 14.70052 5.722657 14.775391 5.644531 C 14.85026 5.566406 14.930012 5.488281 15.014648 5.410156 C 15.099283 5.332031 15.180664 5.257162 15.258789 5.185547 C 15.336914 5.113934 15.405273 5.05534 15.463867 5.009766 C 15.568033 4.912109 15.685221 4.824219 15.81543 4.746094 C 15.926105 4.68099 16.056314 4.62077 16.206055 4.56543 C 16.355793 4.510092 16.518555 4.482422 16.694336 4.482422 C 16.876627 4.482422 17.071939 4.526367 17.280273 4.614258 C 17.488605 4.702148 17.706705 4.860027 17.93457 5.087891 Z M 15.756836 10.3125 L 6.176758 19.892578 L 3.305664 17.021484 L 12.885742 7.441406 Z M 1.391602 21.806641 L 2.368164 18.945312 L 4.243164 20.917969 Z
			</Geometry>

			<Geometry x:Key="IconGeomIsEditing">
				F0 M 14.0731 13.9544 C 14.0731 14.4962 13.8781 14.9588 13.4882 15.3423 C 13.0982 15.7257 12.6315 15.9175 12.088 15.9175 C 11.5365 15.9175 11.0678 15.7257 10.6818 15.3423 C 10.2958 14.9588 10.1028 14.4962 10.1028 13.9544 C 10.1028 13.4125 10.2958 12.9499 10.6818 12.5664 C 11.0678 12.183 11.5365 11.9912 12.088 11.9912 C 12.6315 11.9912 13.0982 12.183 13.4882 12.5664 C 13.8781 12.9499 14.0731 13.4125 14.0731 13.9544 Z M 13.7068 25.3829 L 10.4573 25.3829 L 10.4573 17.1304 L 13.7068 17.1304 Z M 3.3322 18.6808 C 3.3322 16.1134 4.1908 13.9252 5.9081 12.1163 C 7.6254 10.3074 9.6853 9.4029 12.088 9.4029 C 14.5142 9.4029 16.584 10.3136 18.2974 12.135 C 20.0107 13.9564 20.8674 16.1384 20.8674 18.6808 C 20.8674 21.2483 20.0048 23.4344 18.2796 25.2391 C 16.5545 27.0439 14.4906 27.9462 12.088 27.9462 C 9.6617 27.9462 7.5958 27.0376 5.8904 25.2204 C 4.1849 23.4031 3.3322 21.2233 3.3322 18.6808 Z M 4.7974 18.6808 C 4.7974 20.8148 5.5083 22.6342 6.9302 24.1388 C 8.3521 25.6434 10.0713 26.3957 12.088 26.3957 C 14.1125 26.3957 15.8376 25.6393 17.2635 24.1263 C 18.6893 22.6133 19.4022 20.7982 19.4022 18.6808 C 19.4022 16.5385 18.6853 14.715 17.2516 13.2104 C 15.8179 11.7057 14.0967 10.9534 12.088 10.9534 C 10.0635 10.9534 8.3422 11.7099 6.9243 13.2229 C 5.5063 14.7359 4.7974 16.5552 4.7974 18.6808 Z
			</Geometry>

			<Geometry x:Key="IconGeomIsLocked">
				F0 M 14.638672 12.314453 C 14.820963 12.314453 14.996744 12.350261 15.166016 12.421875 C 15.335286 12.49349 15.483398 12.589519 15.610352 12.709961 C 15.737305 12.830404 15.838216 12.970378 15.913086 13.129883 C 15.987955 13.289389 16.025391 13.457031 16.025391 13.632812 L 16.025391 20.986328 C 16.025391 21.175131 15.99121 21.350912 15.922852 21.513672 C 15.854491 21.676432 15.758463 21.821289 15.634766 21.948242 C 15.511067 22.075195 15.367838 22.174479 15.205078 22.246094 C 15.042317 22.317709 14.869791 22.353516 14.6875 22.353516 L 5.341797 22.353516 C 5.152995 22.353516 4.975586 22.317709 4.80957 22.246094 C 4.643555 22.174479 4.498698 22.075195 4.375 21.948242 C 4.251302 21.821289 4.153646 21.676432 4.082031 21.513672 C 4.010417 21.350912 3.974609 21.175131 3.974609 20.986328 L 3.974609 13.632812 C 3.974609 13.457031 4.012044 13.289389 4.086914 13.129883 C 4.161784 12.970378 4.262695 12.830404 4.389648 12.709961 C 4.516602 12.589519 4.661458 12.49349 4.824219 12.421875 C 4.986979 12.350261 5.159505 12.314453 5.341797 12.314453 L 5.341797 10.732422 C 5.341797 10.068359 5.397135 9.44987 5.507812 8.876953 C 5.618489 8.304037 5.841471 7.807618 6.176758 7.387695 C 6.512044 6.967774 6.984049 6.638998 7.592773 6.401367 C 8.201497 6.163737 9.003906 6.044922 10 6.044922 C 11.002604 6.044922 11.808268 6.163737 12.416992 6.401367 C 13.025715 6.638998 13.494465 6.967774 13.823242 7.387695 C 14.152018 7.807618 14.370117 8.304037 14.477539 8.876953 C 14.584961 9.44987 14.638672 10.068359 14.638672 10.732422 Z M 7.333984 10.732422 L 7.333984 12.265625 L 12.666016 12.265625 L 12.666016 10.732422 C 12.666016 10.237631 12.646484 9.819336 12.607422 9.477539 C 12.568359 9.135742 12.462564 8.860678 12.290039 8.652344 C 12.117513 8.444012 11.852213 8.294271 11.494141 8.203125 C 11.136067 8.111979 10.638021 8.066406 10 8.066406 C 9.368489 8.066406 8.875325 8.111979 8.520508 8.203125 C 8.165689 8.294271 7.900391 8.444012 7.724609 8.652344 C 7.548828 8.860678 7.439778 9.135742 7.397461 9.477539 C 7.355143 9.819336 7.333984 10.237631 7.333984 10.732422 Z
			</Geometry>


			<!--#region > colors-->

			<SolidColorBrush x:Key="Undecided" Color="Red" />


			<ws:CsColor x:Key="Base.Bkg"
					Color="{StaticResource Blue.400}"
					/>
			<ws:CsColor x:Key="Fg.NotSel"
					Color="{StaticResource Gray.650}"
					/>
			<ws:CsColor x:Key="Mo.IsEditing"
					Color="{StaticResource Deep.Purple.500}"
					/>
			<ws:CsColor x:Key="Mo.Icon.IsEditing"
					Color="{StaticResource Deep.Purple.600}"
					/>

			<SolidColorBrush x:Key="Fg.MouseOver" Color="White" />

			<!--  editable field  -->

			<!--  (A) Not Selected  -->
			<!--  Id  -->
			<SolidColorBrush x:Key="Id.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="Id.Bg.NotSel" Color="{StaticResource Light.Blue.300}" />

			<!--  Id Icon  -->
			<SolidColorBrush x:Key="IdIcon.Fg.NotSel" Color="{StaticResource Deep.Orange.300}" />

			<!--  A  -->
			<SolidColorBrush x:Key="TitleNoEdit.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="TitleNoEdit.Bg.NotSel" Color="{StaticResource Light.Blue.300}" />
			<!--  B  -->
			<SolidColorBrush x:Key="TitleCanEdit.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="TitleCanEdit.Bg.NotSel" Color="{StaticResource Light.Blue.300}" />
			<!--  C  -->
			<SolidColorBrush x:Key="NoEdit.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="NoEdit.Bg.NotSel" Color="{StaticResource Blue.250}" />
			<!--  D  -->
			<SolidColorBrush x:Key="CanEdit.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="CanEdit.Bg.NotSel" Color="{StaticResource Blue.250}" />
			<!--  E  -->
			<SolidColorBrush x:Key="Action1.Fg.NotSel" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="Action1.Bg.NotSel" Color="{StaticResource Real.Green.250}" />
			<!--  F  -->
			<SolidColorBrush x:Key="SubTitle.Fg.NotSel" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="SubTitle.Bg.NotSel" Color="{StaticResource Real.Green.250}" />
			<SolidColorBrush x:Key="SubTitle.Gb.NotSel" Color="{StaticResource Real.Green.200}" />
			<!--  G  -->
			<SolidColorBrush x:Key="Action2.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="Action2.Bg.NotSel" Color="{StaticResource Cool.Blue.250}" />
			<!--  I  -->
			<SolidColorBrush x:Key="Image1.Bg.NotSel" Color="{StaticResource Gray.500}" />
			<!--  J  -->
			<SolidColorBrush x:Key="Hlight.Fg.NotSel" Color="{StaticResource Fg.NotSel}" />
			<SolidColorBrush x:Key="Hlight.Bg.NotSel" Color="{StaticResource Deep.Orange.300}" />


			<!--  (B) Is Selected  -->
			<!--  Id  -->
			<SolidColorBrush x:Key="Id.Fg.IsSel" Color="{StaticResource Cool.Blue.950}" />
			<SolidColorBrush x:Key="Id.Bg.IsSel" Color="{StaticResource Blue.600}" />

			<!--  Id Icon  -->
			<SolidColorBrush x:Key="IdIcon.Fg.IsSel" Color="{StaticResource Deep.Orange.500}" />

			<!--  A  -->
			<SolidColorBrush x:Key="TitleNoEdit.Fg.IsSel" Color="{StaticResource Cool.Blue.950}" />
			<SolidColorBrush x:Key="TitleNoEdit.Bg.IsSel" Color="{StaticResource Light.Blue.550}" />
			<!--  B  -->
			<SolidColorBrush x:Key="TitleCanEdit.Fg.IsSel" Color="{StaticResource Cool.Blue.950}" />
			<SolidColorBrush x:Key="TitleCanEdit.Bg.IsSel" Color="{StaticResource Light.Blue.550}" />
			<!--  C  -->
			<SolidColorBrush x:Key="NoEdit.Fg.IsSel" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="NoEdit.Bg.IsSel" Color="{StaticResource Blue.400}" />
			<!--  D  -->
			<SolidColorBrush x:Key="CanEdit.Fg.IsSel" Color="{StaticResource Cool.Blue.950}" />
			<SolidColorBrush x:Key="CanEdit.Bg.IsSel" Color="{StaticResource Blue.400}" />
			<!--  E  -->
			<SolidColorBrush x:Key="Action1.Fg.IsSel" Color="{StaticResource True.White}" />
			<SolidColorBrush x:Key="Action1.Bg.IsSel" Color="{StaticResource Real.Green.350}" />
			<!-- <SolidColorBrush x:Key="Action1.Bg.IsSel" Color="{StaticResource Teal.500}" /> -->
			<!--  F  -->
			<SolidColorBrush x:Key="SubTitle.Fg.IsSel" Color="{StaticResource True.White}" />
			<SolidColorBrush x:Key="SubTitle.Bg.IsSel" Color="{StaticResource Real.Green.350}" />
			<SolidColorBrush x:Key="SubTitle.Gb.IsSel" Color="{StaticResource Real.Green.250}" />
			<!--  G  -->
			<SolidColorBrush x:Key="Action2.Fg.IsSel" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="Action2.Bg.IsSel" Color="{StaticResource Cool.Blue.450}" />
			<!--  I  -->
			<SolidColorBrush x:Key="Image1.Bg.IsSel" Color="LightGray" />
			<!--  J  -->
			<SolidColorBrush x:Key="Hlight.Fg.IsSel" Color="{StaticResource Cool.Blue.950}" />
			<SolidColorBrush x:Key="Hlight.Bg.IsSel" Color="{StaticResource Deep.Orange.450}" />


			<!--  (C) Is Editing  -->
			<!--  A  -->
			<SolidColorBrush x:Key="TitleNoEdit.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="TitleNoEdit.Bg.IsEditg" Color="{StaticResource Light.Blue.450}" />
			<!--  B  -->
			<SolidColorBrush x:Key="TitleCanEdit.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="TitleCanEdit.Bg.IsEditg" Color="{StaticResource Light.Blue.450}" />
			<!--  C  -->
			<SolidColorBrush x:Key="NoEdit.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="NoEdit.Bg.IsEditg" Color="{StaticResource Blue.400}" />
			<!--  D  -->
			<SolidColorBrush x:Key="CanEdit.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="CanEdit.Bg.IsEditg" Color="{StaticResource Deep.Purple.450}" />
			<SolidColorBrush x:Key="CanEdit.Bdr.IsEditg" Color="{StaticResource Deep.Purple.700}" />
			<SolidColorBrush x:Key="CanEdit.Mo.IsEditg" Color="{StaticResource Mo.IsEditing}" />
			<SolidColorBrush x:Key="CanEdit.Icon.Mo.IsEditg" Color="{StaticResource Mo.Icon.IsEditing}" />
			<!--  E  -->
			<SolidColorBrush x:Key="Action1.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="Action1.Bg.IsEditg" Color="{StaticResource Deep.Purple.450}" />
			<SolidColorBrush x:Key="Action1.Mo.IsEditg" Color="{StaticResource Mo.IsEditing}" />
			<SolidColorBrush x:Key="Action1.Icon.Mo.IsEditg" Color="{StaticResource Mo.Icon.IsEditing}" />
			<!--  F  -->
			<SolidColorBrush x:Key="SubTitle.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="SubTitle.Bg.IsEditg" Color="{StaticResource Real.Green.350}" />
			<SolidColorBrush x:Key="SubTitle.Gb.IsEditg" Color="{StaticResource Real.Green.250}" />
			<!--  G  -->
			<SolidColorBrush x:Key="Action2.Fg.IsEditg" Color="White" />
			<SolidColorBrush x:Key="Action2.Bg.IsEditg" Color="{StaticResource Deep.Purple.400}" />
			<SolidColorBrush x:Key="Action2.Bdr.IsEditg" Color="{StaticResource Deep.Purple.700}" />
			<SolidColorBrush x:Key="Action2.Mo.IsEditg" Color="{StaticResource Mo.IsEditing}" />
			<SolidColorBrush x:Key="Action2.Icon.Mo.IsEditg" Color="{StaticResource Mo.Icon.IsEditing}" />


			<!--  (D) No Editing  -->
			<!--  A  -->
			<SolidColorBrush x:Key="TitleNoEdit.Fg.NoEditg" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="TitleNoEdit.Bg.NoEditg" Color="{StaticResource Light.Blue.550}" />
			<!--  B  -->
			<SolidColorBrush x:Key="TitleCanEdit.Fg.NoEditg" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="TitleCanEdit.Bg.NoEditg" Color="{StaticResource Light.Blue.550}" />
			<!--  C  -->
			<SolidColorBrush x:Key="NoEdit.Fg.NoEditg" Color="{StaticResource Cool.Blue.820}" />
			<SolidColorBrush x:Key="NoEdit.Bg.NoEditg" Color="{StaticResource Blue.400}" />
			<!--  D  -->
			<SolidColorBrush x:Key="CanEdit.Fg.NoEditg" Color="{StaticResource Cool.Blue.820}" />
			<SolidColorBrush x:Key="CanEdit.Bg.NoEditg" Color="{StaticResource Cool.Blue.300}" />
			<SolidColorBrush x:Key="CanEdit.Bdr.NoEditg" Color="{StaticResource Deep.Purple.700}" />
			<!--  E  -->
			<SolidColorBrush x:Key="Action1.Fg.NoEditg" Color="{StaticResource Cool.Blue.970}" />
			<SolidColorBrush x:Key="Action1.Bg.NoEditg" Color="{StaticResource Real.Green.350}" />
			<!--  F  -->
			<SolidColorBrush x:Key="SubTitle.Fg.NoEditg" Color="{StaticResource Cool.Blue.970}" />
			<SolidColorBrush x:Key="SubTitle.Bg.NoEditg" Color="{StaticResource Real.Green.350}" />
			<SolidColorBrush x:Key="SubTitle.Gb.NoEditg" Color="{StaticResource Real.Green.250}" />
			<!--  G  -->
			<SolidColorBrush x:Key="Action2.Fg.NoEditg" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="Action2.Bg.NoEditg" Color="{StaticResource Cool.Blue.300}" />
			<SolidColorBrush x:Key="Action2.Bdr.NoEditg" Color="{StaticResource Deep.Purple.700}" />


			<!--  (E) IsLocked  -->
			<!--  A  -->
			<SolidColorBrush x:Key="TitleNoEdit.Fg.IsLocked" Color="{StaticResource Cool.Blue.900}" />
			<SolidColorBrush x:Key="TitleNoEdit.Bg.IsLocked" Color="{StaticResource Light.Blue.550}" />
			<!--  B  -->
			<SolidColorBrush x:Key="TitleCanEdit.Fg.IsLocked" Color="{StaticResource Cool.Blue.900}" />
			<SolidColorBrush x:Key="TitleCanEdit.Bg.IsLocked" Color="{StaticResource Light.Blue.550}" />
			<!--  C  -->
			<SolidColorBrush x:Key="NoEdit.Fg.IsLocked" Color="{StaticResource Cool.Blue.800}" />
			<SolidColorBrush x:Key="NoEdit.Bg.IsLocked" Color="{StaticResource Blue.400}" />
			<!--  D  -->
			<SolidColorBrush x:Key="CanEdit.Fg.IsLocked" Color="{StaticResource Cool.Blue.800}" />
			<SolidColorBrush x:Key="CanEdit.Bg.IsLocked" Color="{StaticResource Base.Bkg}" />
			<!--  E  -->
			<SolidColorBrush x:Key="Action1.Fg.IsLocked" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="Action1.Bg.IsLocked" Color="{StaticResource Real.Green.250}" />
			<!--  F  -->
			<SolidColorBrush x:Key="SubTitle.Fg.IsLocked" Color="{StaticResource Cool.Blue.850}" />
			<SolidColorBrush x:Key="SubTitle.Bg.IsLocked" Color="{StaticResource Real.Green.250}" />
			<SolidColorBrush x:Key="SubTitle.Gb.IsLocked" Color="{StaticResource Real.Green.200}" />
			<!--  G  -->
			<SolidColorBrush x:Key="Action2.Fg.IsLocked" Color="{StaticResource Cool.Blue.800}" />
			<SolidColorBrush x:Key="Action2.Bg.IsLocked" Color="{StaticResource Cool.Blue.400}" />


			<!--#endregion-->


			<!--
				field types
				header
				
				(Bdr/Tblk).Title.NoEd : for not editable field
				
				(Bdr/Tblk).Text.NoEd : not editable text field (info)
				
				(Bdr/Tblk).Title.Ed : to editable field
				
				(Bdr/Tbx).Text.Ed : editable text field (textbox)  (NoEdit / CanEdit / IsEdit)
				
				
				(Bdr/Tblk).Action1 : field (individual actions: date control, spinner control)
				
				(Bdr)Action2.Hdr : field sub-header (for grouped controls - check box group or radio button group)
				(Bdr/Tblk).Action2 : field
				
				(Bdr)Action3 : field (combo actions: combobox, sub-list view)
				
				(Bdr).Image : field
				
				(Bdr/Tblk).Hlight : field
				
				
				
				(Bdr/Tblk).Info.help : (tool tip / balloon)
				
				(Bdr/Tblk).Info.Directions : (pop-up?)
				
				
				add:
				badge
				Id
			-->


			<Style x:Key="Root"
					TargetType="FrameworkElement"
					>
				<Setter Property="IsEnabled" Value="{Binding ElementName=win, Path=Resources[IsSelected]}" />
			</Style>




			<Style x:Key="BtnBase"
					TargetType="Button"
					>
				<Setter Property="FontSize" Value="14" />
				<Setter Property="Foreground" Value="white" />
			</Style>

			<Style x:Key="BtnEdit"
					BasedOn="{StaticResource BtnBase}"
					TargetType="Button"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Padding" Value="0,-1,0,-4" />
				<Setter Property="Visibility" Value="Visible" />

				<Setter Property="FontFamily" Value="Segoe UI Symbol" />
				<Setter Property="Template" Value="{DynamicResource Button.Stealth.ControlTemplate}" />
			</Style>


			<!--#region > border styles-->

			<Style x:Key="BdrBase"
					TargetType="Border"
					>
				<Setter Property="Margin" Value="1" />
				<Setter Property="CornerRadius" Value="{StaticResource Normal.CornerRadius}" />
				<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgDefault)}" />
			</Style>

			<Style x:Key="BdrIsSelectedTrigger"
					BasedOn="{StaticResource BdrBase}"
					TargetType="Border"
					>
				<Style.Triggers>
					<DataTrigger Binding="{Binding ElementName=win, Path=IsSelected}" Value="True">
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsSelected)}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="BdrAllTriggers"
					BasedOn="{StaticResource BdrBase}"
					TargetType="Border"
					>
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsSelected)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgNoEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsLocked)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.DoesMouseOver)}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.MoIsEditing)}" />
					</MultiDataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="BdrAllTrigTitleNoEd"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource TitleNoEdit.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource TitleNoEdit.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource TitleNoEdit.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource TitleNoEdit.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource TitleNoEdit.Bg.NoEditg}" />
			</Style>


			<Style x:Key="BdrAllTrigCanEd"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource TitleCanEdit.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource TitleCanEdit.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource TitleCanEdit.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource TitleCanEdit.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource TitleCanEdit.Bg.NoEditg}" />
			</Style>

			<Style x:Key="BdrAllTrigNoEd"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource NoEdit.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource NoEdit.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource NoEdit.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource NoEdit.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource NoEdit.Bg.NoEditg}" />
			</Style>

			<Style x:Key="BdrAllTrigCanEdit"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource CanEdit.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource CanEdit.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource CanEdit.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource CanEdit.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource CanEdit.Bg.NoEditg}" />
				<Setter Property="cs:TestVisualStates.DoesMouseOver" Value="True" />
				<Setter Property="cs:TestVisualStates.MoIsEditing" Value="{StaticResource CanEdit.Mo.IsEditg}" />
			</Style>


			<Style x:Key="BdrAllTrigCanEditIcon"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource CanEdit.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource CanEdit.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource CanEdit.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource CanEdit.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource CanEdit.Bg.NoEditg}" />
				<Setter Property="cs:TestVisualStates.DoesMouseOver" Value="True" />
				<Setter Property="cs:TestVisualStates.MoIsEditing" Value="{StaticResource CanEdit.Icon.Mo.IsEditg}" />
			</Style>

			<Style x:Key="BdrAllTrigAction1"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource Action1.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource Action1.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource Action1.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource Action1.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource Action1.Bg.NoEditg}" />
				<Setter Property="cs:TestVisualStates.DoesMouseOver" Value="True" />
				<Setter Property="cs:TestVisualStates.MoIsEditing" Value="{StaticResource Action1.Mo.IsEditg}" />
			</Style>

			<Style x:Key="BdrAllTrigAction1Icon"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource Action1.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource Action1.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource Action1.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource Action1.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource Action1.Bg.NoEditg}" />
				<Setter Property="cs:TestVisualStates.DoesMouseOver" Value="True" />
				<Setter Property="cs:TestVisualStates.MoIsEditing" Value="{StaticResource Action1.Icon.Mo.IsEditg}" />
			</Style>

			<Style x:Key="BdrAllTrigAction2"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource Action2.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource Action2.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource Action2.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource Action2.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource Action2.Bg.NoEditg}" />
				<Setter Property="cs:TestVisualStates.DoesMouseOver" Value="True" />
				<Setter Property="cs:TestVisualStates.MoIsEditing" Value="{StaticResource Action2.Mo.IsEditg}" />
			</Style>

			<Style x:Key="BdrAllTrigAction2Icon"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource Action2.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource Action2.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource Action2.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource Action2.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource Action2.Bg.NoEditg}" />
				<Setter Property="cs:TestVisualStates.DoesMouseOver" Value="True" />
				<Setter Property="cs:TestVisualStates.MoIsEditing" Value="{StaticResource Action2.Icon.Mo.IsEditg}" />
			</Style>


			<Style x:Key="BdrAllTrigSubTitle"
					BasedOn="{StaticResource BdrAllTriggers}"
					TargetType="Border"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource SubTitle.Bg.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource SubTitle.Bg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource SubTitle.Bg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource SubTitle.Bg.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource SubTitle.Bg.NoEditg}" />
			</Style>

			<!--#endregion-->

			<!--#region > textblock styles-->

			<Style x:Key="TblkBase"
					TargetType="TextBlock"
					>
				<Setter Property="Padding" Value="5,0,0,2" />
				<Setter Property="Margin" Value="1" />
				<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgDefault)}" />
			</Style>

			<Style x:Key="TblkIsSelectedTrigger"
					BasedOn="{StaticResource TblkBase}"
					TargetType="TextBlock"
					>
				<Style.Triggers>
					<DataTrigger Binding="{Binding ElementName=win, Path=IsSelected}" Value="True">
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="TblkAllTriggers"
					BasedOn="{StaticResource TblkBase}"
					TargetType="TextBlock"
					>
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgNoEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsLocked)}" />
					</MultiDataTrigger>

				</Style.Triggers>
			</Style>


			<Style x:Key="TblkAllTrigTitleNoEd"
					BasedOn="{StaticResource TblkAllTriggers}"
					TargetType="TextBlock"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource TitleNoEdit.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource TitleNoEdit.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource TitleNoEdit.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource TitleNoEdit.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource TitleNoEdit.Fg.NoEditg}" />
			</Style>



			<Style x:Key="TblkAllTrigCanEd"
					BasedOn="{StaticResource TblkAllTriggers}"
					TargetType="TextBlock"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource TitleCanEdit.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource TitleCanEdit.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource TitleCanEdit.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource TitleCanEdit.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource TitleCanEdit.Fg.NoEditg}" />
			</Style>


			<Style x:Key="TblkAllTrigNoEd"
					BasedOn="{StaticResource TblkAllTriggers}"
					TargetType="TextBlock"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource NoEdit.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource NoEdit.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource NoEdit.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource NoEdit.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource NoEdit.Fg.NoEditg}" />
			</Style>



			<Style x:Key="TblkAllTrigAction1"
					BasedOn="{StaticResource TblkAllTriggers}"
					TargetType="TextBlock"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource Action1.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource Action1.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource Action1.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource Action1.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource Action1.Fg.NoEditg}" />
			</Style>


			<Style x:Key="TblkAllTrigSubTitle"
					BasedOn="{StaticResource TblkAllTriggers}"
					TargetType="TextBlock"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource SubTitle.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource SubTitle.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource SubTitle.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource SubTitle.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource SubTitle.Fg.NoEditg}" />
			</Style>


			<!--#endregion-->

			<!--#region > textbox styles-->

			<Style x:Key="TbxBase"
					TargetType="TextBox"
					>
				<Setter Property="Padding" Value="5,0,0,2" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgDefault)}" />
			</Style>

			<Style x:Key="TbxAllTriggers"
					BasedOn="{StaticResource TbxBase}"
					TargetType="TextBox"
					>
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgNoEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsLocked)}" />
					</MultiDataTrigger>

				</Style.Triggers>
			</Style>


			<Style x:Key="TbxAllTrigsCanEdit"
					BasedOn="{StaticResource TbxAllTriggers}"
					TargetType="TextBox"
					>
				<Setter Property="HorizontalAlignment" Value="left" />
				<Setter Property="TextAlignment" Value="left" />
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource CanEdit.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource CanEdit.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource CanEdit.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource CanEdit.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource CanEdit.Fg.NoEditg}" />
			</Style>



			<!--#endregion-->

			<!--#region > stack panel styles-->

			<Style x:Key="StkPnlBase"
					TargetType="StackPanel"
					>
				<Setter Property="Margin" Value="0" />
				<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgDefault)}" />
			</Style>

			<Style x:Key="StkPnlAllTriggers"
					BasedOn="{StaticResource StkPnlBase}"
					TargetType="StackPanel"
					>
				<Setter Property="Margin" Value="4,4,8,4" />
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsSelected)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgNoEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.BgIsLocked)}" />
					</MultiDataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="StkPnlAllTrigsSpAction2"
					BasedOn="{StaticResource StkPnlAllTriggers}"
					TargetType="StackPanel"
					>
				<Setter Property="cs:TestVisualStates.BgDefault" Value="{StaticResource SubTitle.Gb.NotSel}" />
				<Setter Property="cs:TestVisualStates.BgIsEditing" Value="{StaticResource SubTitle.Gb.IsEditg}" />
				<Setter Property="cs:TestVisualStates.BgIsLocked" Value="{StaticResource SubTitle.Gb.IsLocked}" />
				<Setter Property="cs:TestVisualStates.BgIsSelected" Value="{StaticResource SubTitle.Gb.IsSel}" />
				<Setter Property="cs:TestVisualStates.BgNoEditing" Value="{StaticResource SubTitle.Gb.NoEditg}" />
			</Style>


			<!--#endregion-->


			<!--#region > path styles-->

			<Style x:Key="PathBase"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="0" />
				<Setter Property="HorizontalAlignment" Value="Right" />
				<Setter Property="Stretch" Value="Uniform" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="Data" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.IconGeometryDefault)}" />
				<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgDefault)}" />
			</Style>

			<Style x:Key="PathIsSelectedTrigger"
					BasedOn="{StaticResource PathBase}"
					TargetType="Path"
					>
				<Style.Triggers>
					<DataTrigger Binding="{Binding ElementName=win, Path=IsSelected}" Value="True">
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="PathAllTriggersVarIcons"
					BasedOn="{StaticResource PathBase}"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="4,4,8,4" />
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
						<Setter Property="Data" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.IconGeometryIsSelected)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsEditing)}" />
						<Setter Property="Data" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.IconGeometryIsEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgNoEditing)}" />
						<Setter Property="Data" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.IconGeometryNoEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsLocked)}" />
						<Setter Property="Data" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.IconGeometryIsLocked)}" />
					</MultiDataTrigger>

				</Style.Triggers>
			</Style>

			<Style x:Key="PathAllTriggersFixedIcons"
					BasedOn="{StaticResource PathBase}"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="4,4,8,4" />
				<Setter Property="Data" Value="{StaticResource IconGeomIsSelected}" />
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
						<Setter Property="Data" Value="{StaticResource IconGeomIsSelected}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsEditing)}" />
						<Setter Property="Data" Value="{StaticResource IconGeomIsEditing}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgNoEditing)}" />
						<Setter Property="Data" Value="{StaticResource IconGeomNoEditing}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsLocked)}" />
						<Setter Property="Data" Value="{StaticResource IconGeomIsLocked}" />
					</MultiDataTrigger>
				</Style.Triggers>
			</Style>



			<Style x:Key="PathAllTriggersFixedIconsAction1"
					BasedOn="{StaticResource PathAllTriggersFixedIcons}"
					TargetType="Path"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource Action1.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource Action1.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource Action1.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource Action1.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource Action1.Fg.NoEditg}" />
			</Style>


			<Style x:Key="PathAllTriggersFixedIconsAction2"
					BasedOn="{StaticResource PathAllTriggersFixedIcons}"
					TargetType="Path"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource Action2.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource Action2.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource Action2.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource Action2.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource Action2.Fg.NoEditg}" />
			</Style>



			<Style x:Key="PathAllTriggersFixedIconsCanEdit"
					BasedOn="{StaticResource PathAllTriggersFixedIcons}"
					TargetType="Path"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource CanEdit.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource CanEdit.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource CanEdit.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource CanEdit.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource CanEdit.Fg.NoEditg}" />
			</Style>

			<!--#endregion-->



			<!--#region > checkbox styles-->

			<Style x:Key="CbxBase"
					BasedOn="{StaticResource Lv1.CheckboxStyle}"
					TargetType="CheckBox"
					>
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgDefault)}" />
			</Style>


			<Style x:Key="CbxAllTriggers"
					BasedOn="{StaticResource CbxBase}"
					TargetType="CheckBox"
					>
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="False" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsSelected)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=NoEditing}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgNoEditing)}" />
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=win, Path=IsSelected}" Value="True" />
							<Condition Binding="{Binding ElementName=win, Path=IsLocked}" Value="True" />
						</MultiDataTrigger.Conditions>
						<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.FgIsLocked)}" />
					</MultiDataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="CbxAllTriggersCbx"
					BasedOn="{StaticResource CbxAllTriggers}"
					TargetType="CheckBox"
					>
				<Setter Property="cs:TestVisualStates.FgDefault" Value="{StaticResource Action2.Fg.NotSel}" />
				<Setter Property="cs:TestVisualStates.FgIsEditing" Value="{StaticResource Action2.Fg.IsEditg}" />
				<Setter Property="cs:TestVisualStates.FgIsLocked" Value="{StaticResource Action2.Fg.IsLocked}" />
				<Setter Property="cs:TestVisualStates.FgIsSelected" Value="{StaticResource Action2.Fg.IsSel}" />
				<Setter Property="cs:TestVisualStates.FgNoEditing" Value="{StaticResource Action2.Fg.NoEditg}" />
			</Style>

			<!--#endregion-->

			<!--#region > test templates-->


			<Style x:Key="TblkSamples"
					TargetType="TextBlock"
					>
				<Setter Property="Padding" Value="5,0,0,2" />
				<Setter Property="Margin" Value="1" />
				<Setter Property="FontSize" Value="{StaticResource FontSize.Normal}" />
			</Style>

			<Style x:Key="BorderStyle.Sample"
					TargetType="Border"
					>
				<Setter Property="Margin" Value="0,0,2,2" />
				<Setter Property="Padding" Value="5,0,5,3" />
				<Setter Property="Background" Value="#0070f0" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="CornerRadius" Value="4" />
			</Style>

			<DataTemplate x:Key="Sample">
				<Grid x:Name="Item_Layout_1"
						Grid.Column="0"
						Grid.Row="2"
						Height="Auto"
						Background="#333333"
						Margin="0,0,0,5"
						VerticalAlignment="Top"
						>


					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="78" />
						<ColumnDefinition Width="86" />
						<ColumnDefinition Width="3*" />
						<ColumnDefinition Width="4*" />
						<ColumnDefinition Width="3*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Border Grid.Column="0"
							Grid.Row="0"
							Grid.RowSpan="3"
							Padding="0"
							Style="{StaticResource BorderStyle.Sample}"
							>

						<!--  Grid.RowSpan="3"  -->
						<TextBlock Grid.Column="0"
								Grid.Row="1"
								FontSize="38"
								FontWeight="DemiBold"
								HorizontalAlignment="Center"
								Margin="0,0,0,4"
								Padding="0"
								Text="01"
								VerticalAlignment="Center"
								/>
					</Border>

					<Border Grid.Column="0"
							Grid.Row="2"
							Background="OrangeRed"
							HorizontalAlignment="Center"
							Margin="0,0,0,5"
							Padding="0"
							VerticalAlignment="Bottom"
							Visibility="Visible"
							Style="{StaticResource BorderStyle.Sample}"
							>
						<TextBlock FontSize="9"
								Margin="0,-2,0,0"
								Padding="8,1,8,1"
								Text="Locked"
								TextAlignment="Center"
								/>
					</Border>

					<Border Grid.Column="1"
							Grid.Row="0"
							Grid.RowSpan="3"
							Background="LightGray"
							Style="{StaticResource BorderStyle.Sample}"
							/>

					<Border Grid.Column="2"
							Grid.Row="0"
							Grid.ColumnSpan="2"
							Style="{StaticResource BorderStyle.Sample}"
							>
						<TextBlock Text="This is the unit name" />
					</Border>

					<Border Grid.Column="2"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Style="{StaticResource BorderStyle.Sample}"
							>
						<TextBlock Text="This is the unit Description" />
					</Border>

					<Border Grid.Column="2"
							Grid.Row="2"
							HorizontalAlignment="Stretch"
							Style="{StaticResource BorderStyle.Sample}"
							>
						<TextBlock Padding="0,0,10,0"
								Text="Example"
								TextAlignment="Center"
								/>
					</Border>

					<Border Grid.Column="3"
							Grid.Row="2"
							Style="{StaticResource BorderStyle.Sample}"
							>
						<TextBlock Padding="0,0,10,0"
								Text="1,234' - 255/256&quot;"
								TextAlignment="Center"
								/>
					</Border>

					<Border Grid.Column="4"
							Grid.Row="0"
							Grid.RowSpan="3"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Style="{StaticResource BorderStyle.Sample}"
							>
						<Grid>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />

							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<TextBlock FontSize="14"
									HorizontalAlignment="Stretch"
									Margin="5,0,0,0"
									Text="Show in this list"
									TextAlignment="Left"
									VerticalAlignment="Center"
									/>


							<CheckBox Content="Favs"
									Grid.Column="0"
									Grid.Row="1"
									Background="#666666"
									FontSize="14"
									Foreground="White"
									IsChecked="True"
									Margin="5,0,0,0"
									VerticalContentAlignment="Center"
									/>
							<CheckBox Content="Dialog left"
									Grid.Column="0"
									Grid.Row="2"
									Background="#666666"
									FontSize="14"
									Foreground="White"
									IsChecked="True"
									Margin="5,0,0,0"
									VerticalContentAlignment="Center"
									/>
							<CheckBox Content="Dialog Right"
									Grid.Column="0"
									Grid.Row="3"
									Background="#666666"
									FontSize="14"
									Foreground="White"
									IsChecked="True"
									Margin="5,0,0,0"
									VerticalContentAlignment="Center"
									/>


						</Grid>

					</Border>

				</Grid>

			</DataTemplate>


			<!--  A1/A2  not selected / not locked / na editing  -->
			<!--  not selected / is locked / na editing  -->
			<Border x:Key="NotSelectedNotLockedNaEditing"
					CornerRadius="4"
					Padding="4"
					>
				<Border.Style>
					<Style TargetType="Border">
						<Setter Property="IsEnabled" Value="True" />
						<Setter Property="Background" Value="{StaticResource Lv1.Item.Panel.Bkg.Nml}" />
					</Style>
				</Border.Style>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0"
							Grid.Row="0"
							Foreground="Black"
							Text="A1/A2 not selected / not locked / na editing"
							Style="{StaticResource TblkSamples}"
							>
						<TextBlock.Background>
							<SolidColorBrush Color="{StaticResource Green.400}" />
						</TextBlock.Background>
					</TextBlock>

					<!--  A  -->
					<TextBlock Grid.Column="1"
							Grid.Row="0"
							Background="{StaticResource TitleNoEdit.Bg.NotSel}"
							Foreground="{StaticResource TitleNoEdit.Fg.NotSel}"
							Text="A title text/not editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  B  -->
					<TextBlock Grid.Column="1"
							Grid.Row="1"
							Background="{StaticResource TitleCanEdit.Bg.NotSel}"
							Foreground="{StaticResource TitleCanEdit.Fg.NotSel}"
							Text="B title text/editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  C  -->
					<TextBlock Grid.Column="2"
							Grid.Row="0"
							Background="{StaticResource NoEdit.Bg.NotSel}"
							Foreground="{StaticResource NoEdit.Fg.NotSel}"
							Text="C (Tblk) text/not editable"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  D  -->
					<Border Grid.Column="2"
							Grid.Row="1"
							Background="{StaticResource CanEdit.Bg.NotSel}"
							CornerRadius="6"
							Margin="1"
							>
						<!--  BorderBrush="{StaticResource CanEdit.Bdr.NotSel}"  -->
						<!--  BorderThickness="1"  -->
						<DockPanel HorizontalAlignment="Stretch">

							<!--  D  -->
							<TextBox DockPanel.Dock="Left"
									Background="Transparent"
									BorderThickness="0"
									Foreground="{StaticResource CanEdit.Fg.NotSel}"
									Text="D (Tbx) text/editable"
									TextAlignment="left"
									Style="{StaticResource TbxBase}"
									/>

							<!--  D2  -->
							<TextBlock DockPanel.Dock="Right"
									FontFamily="Segoe UI Symbol"
									Foreground="{StaticResource CanEdit.Fg.NotSel}"
									HorizontalAlignment="Right"
									Margin="0,1,3,-1"
									Padding="0"
									Text=""
									/>

							<!--  D1  -->
							<Button Content=""
									DockPanel.Dock="Right"
									Foreground="{StaticResource CanEdit.Fg.NotSel}"
									HorizontalAlignment="Right"
									Visibility="Collapsed"
									Style="{StaticResource BtnEdit}"
									/>

						</DockPanel>

					</Border>

					<!--  E  -->
					<TextBlock Grid.Column="{StaticResource Action1_Col}"
							Grid.Row="{StaticResource Action1_Row}"
							Background="{StaticResource Action1.Bg.NotSel}"
							Foreground="{StaticResource Action1.Fg.NotSel}"
							Text="E action field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  F  -->
					<TextBlock Grid.Column="{StaticResource SubTitle_Col}"
							Grid.Row="{StaticResource SubTitle_Row}"
							Background="{StaticResource SubTitle.Bg.NotSel}"
							Foreground="{StaticResource SubTitle.Fg.NotSel}"
							Margin="1,1,1,0"
							Text="F action field sub-header"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  G  -->
					<StackPanel Grid.Column="{StaticResource Ckbx1_Col}"
							Grid.Row="{StaticResource Ckbx1_Row}"
							Grid.RowSpan="2"
							Background="{StaticResource SubTitle.Gb.NotSel}"
							Margin="1,0,1,1"
							>


						<Border Background="{StaticResource Action2.Bg.NotSel}"
								CornerRadius="6"
								Margin="5,3,5,0"
								>

							<DockPanel HorizontalAlignment="Stretch">
								<!--  G2  -->
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.NotSel}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>
								<!--  G  -->
								<CheckBox Content="G checkbox text"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.NotSel}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

						<!--  G  -->
						<Border Background="{StaticResource Action2.Bg.NotSel}"
								CornerRadius="6"
								Margin="5,3,5,3"
								>

							<!--  G2  -->
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.NotSel}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<!--  G  -->
								<CheckBox Content="G checkbox text"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.NotSel}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

					</StackPanel>

					<!--  I  -->
					<TextBlock Grid.Column="{StaticResource Image_Col}"
							Grid.Row="{StaticResource Image_Row}"
							Background="{StaticResource Image1.Bg.NotSel}"
							Foreground="Black"
							Text="I image field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  J  -->
					<TextBlock Grid.Column="{StaticResource Hlight_Col}"
							Grid.Row="{StaticResource Hlight_Row}"
							Background="{StaticResource Hlight.Bg.NotSel}"
							Foreground="{StaticResource Hlight.Fg.NotSel}"
							Text="J Highlighted item"
							Style="{StaticResource TblkSamples}"
							/>

				</Grid>

			</Border>


			<!--  B is selected /  not locked / not editing  -->
			<Border x:Key="IsSelectedNotLockedNotEditing"
					CornerRadius="4"
					Padding="4"
					>
				<Border.Style>
					<Style TargetType="Border">
						<Setter Property="IsEnabled" Value="True" />
						<Setter Property="Background" Value="{StaticResource Lv1.Item.Panel.Bkg.Nml}" />
					</Style>
				</Border.Style>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />

					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0"
							Grid.Row="0"
							Background="{StaticResource Header.Background}"
							Foreground="Black"
							Text="is selected /  not locked / not editing"
							Style="{StaticResource TblkSamples}"
							/>



					<TextBlock Grid.Column="1"
							Grid.Row="0"
							Background="{StaticResource TitleNoEdit.Bg.IsSel}"
							Foreground="{StaticResource TitleNoEdit.Fg.IsSel}"
							Text="title text/not editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<TextBlock Grid.Column="2"
							Grid.Row="0"
							Background="{StaticResource NoEdit.Bg.IsSel}"
							Foreground="{StaticResource NoEdit.Fg.IsSel}"
							Text="(Tblk) text/not editable"
							Style="{StaticResource TblkSamples}"
							/>

					<TextBlock Grid.Column="1"
							Grid.Row="1"
							Background="{StaticResource TitleCanEdit.Bg.IsSel}"
							Foreground="{StaticResource TitleCanEdit.Fg.IsSel}"
							Text="title text/editable field"
							Style="{StaticResource TblkSamples}"
							/>


					<Border Grid.Column="2"
							Grid.Row="1"
							Background="{StaticResource CanEdit.Bg.IsSel}"
							CornerRadius="6"
							Margin="1"
							>
						<!--  BorderBrush="{StaticResource CanEdit.Bdr.IsSel}"  -->
						<!--  BorderThickness="1"  -->
						<DockPanel HorizontalAlignment="Stretch">

							<TextBox DockPanel.Dock="Left"
									Background="Transparent"
									BorderThickness="0"
									Foreground="{StaticResource CanEdit.Fg.IsSel}"
									Text="(Tbx) text/editable"
									TextAlignment="left"
									Style="{StaticResource TbxBase}"
									/>

							<TextBlock DockPanel.Dock="Right"
									FontFamily="Segoe UI Symbol"
									Foreground="{StaticResource CanEdit.Fg.IsSel}"
									HorizontalAlignment="Right"
									Margin="0,1,3,-1"
									Padding="0"
									Text=""
									/>

							<Button Content=""
									DockPanel.Dock="Right"
									Foreground="{StaticResource CanEdit.Fg.IsSel}"
									HorizontalAlignment="Right"
									Visibility="Collapsed"
									Style="{StaticResource BtnEdit}"
									/>

						</DockPanel>

					</Border>


					<TextBlock Grid.Column="{StaticResource Hlight_Col}"
							Grid.Row="{StaticResource Hlight_Row}"
							Background="{StaticResource Hlight.Bg.IsSel}"
							Foreground="{StaticResource Hlight.Fg.IsSel}"
							Text="Highlighted item"
							Style="{StaticResource TblkSamples}"
							/>

					<TextBlock Grid.Column="{StaticResource Image_Col}"
							Grid.Row="{StaticResource Image_Row}"
							Background="{StaticResource Image1.Bg.IsSel}"
							Foreground="Black"
							Text="image field"
							Style="{StaticResource TblkSamples}"
							/>


					<TextBlock Grid.Column="{StaticResource Action1_Col}"
							Grid.Row="{StaticResource Action1_Row}"
							Background="{StaticResource Action1.Bg.IsSel}"
							Foreground="{StaticResource Action1.Fg.IsSel}"
							Text="action field"
							Style="{StaticResource TblkSamples}"
							/>

					<TextBlock Grid.Column="{StaticResource SubTitle_Col}"
							Grid.Row="{StaticResource SubTitle_Row}"
							Background="{StaticResource SubTitle.Bg.IsSel}"
							Foreground="{StaticResource SubTitle.Fg.IsSel}"
							Margin="1,1,1,0"
							Text="action field sub-header"
							Style="{StaticResource TblkSamples}"
							/>



					<StackPanel Grid.Column="{StaticResource Ckbx1_Col}"
							Grid.Row="{StaticResource Ckbx1_Row}"
							Grid.RowSpan="2"
							Background="{StaticResource SubTitle.Gb.IsSel}"
							Margin="1,0,1,1"
							>

						<Border Background="{StaticResource Action2.Bg.IsSel}"
								CornerRadius="6"
								Margin="5,3,5,0"
								>
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.IsSel}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<CheckBox Content="checkbox text"
										DockPanel.Dock="Left"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.IsSel}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

						<Border Background="{StaticResource Action2.Bg.IsSel}"
								CornerRadius="6"
								Margin="5,3,5,3"
								>
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.IsSel}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<CheckBox Content="checkbox text"
										DockPanel.Dock="Left"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.IsSel}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

					</StackPanel>

				</Grid>

			</Border>


			<!--  C is selected / not locked / is editing  -->
			<Border x:Key="IsSelectedNotLockedIsEditing"
					CornerRadius="4"
					Padding="4"
					>
				<Border.Style>
					<Style TargetType="Border">
						<Setter Property="IsEnabled" Value="True" />
						<Setter Property="Background" Value="{StaticResource Lv1.Item.Panel.Bkg.Nml}" />
					</Style>
				</Border.Style>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0"
							Grid.Row="0"
							Background="{StaticResource Header.Background}"
							Foreground="Black"
							Text="(C) is selected / not locked / is editing"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  A  -->
					<TextBlock Grid.Column="1"
							Grid.Row="0"
							Background="{StaticResource TitleNoEdit.Bg.IsEditg}"
							Foreground="{StaticResource TitleNoEdit.Fg.IsEditg}"
							Text="A title text/not editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  B  -->
					<TextBlock Grid.Column="1"
							Grid.Row="1"
							Background="{StaticResource TitleCanEdit.Bg.IsEditg}"
							Foreground="{StaticResource TitleCanEdit.Fg.IsEditg}"
							Text="B title text/editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  C  -->
					<TextBlock Grid.Column="2"
							Grid.Row="0"
							Background="{StaticResource NoEdit.Bg.IsEditg}"
							Foreground="{StaticResource NoEdit.Fg.IsEditg}"
							Text="C (Tblk) text/not editable"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  D  -->
					<!--  <Border Grid.Column="2"  -->
					<!--  Grid.Row="1"  -->
					<!--  Background="{StaticResource CanEdit.Bg.IsEditg}"  -->
					<!--  BorderBrush="{StaticResource CanEdit.Bdr.IsEditg}"  -->
					<!--  BorderThickness="1"  -->
					<!--  CornerRadius="6"  -->
					<!--  Margin="1"  -->
					<!--  >  -->
					<Grid Grid.Column="2"
							Grid.Row="1"
							HorizontalAlignment="Stretch"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Border Grid.Column="0"
								Background="{StaticResource CanEdit.Bg.IsEditg}"
								BorderBrush="{StaticResource CanEdit.Bdr.IsEditg}"
								BorderThickness="1,1,0,1"
								CornerRadius="6,0,0,6"
								Margin="1,1,0,1"
								>
							<TextBox Foreground="{StaticResource CanEdit.Fg.IsEditg}"
									Text="D (Tbx) text/editable"
									TextAlignment="left"
									Style="{StaticResource TbxBase}"
									/>
						</Border>
						<Border Grid.Column="1"
								Background="{StaticResource CanEdit.Bg.IsEditg}"
								BorderBrush="{StaticResource CanEdit.Bdr.IsEditg}"
								BorderThickness="0,1,0,1"
								CornerRadius="0"
								Margin="0,1,0,1"
								>
							<Button Content=""
									Foreground="{StaticResource CanEdit.Fg.IsEditg}"
									HorizontalAlignment="Right"
									Style="{StaticResource BtnEdit}"
									/>
						</Border>

						<Border Grid.Column="2"
								Background="{StaticResource CanEdit.Bg.IsEditg}"
								BorderBrush="{StaticResource CanEdit.Bdr.IsEditg}"
								BorderThickness="0,1,1,1"
								CornerRadius="0,6,6,0"
								Margin="0,1,1,1"
								>
							<TextBlock FontFamily="Segoe UI Symbol"
									FontSize="{StaticResource FontSize.XLarge}"
									Foreground="{StaticResource CanEdit.Fg.IsEditg}"
									HorizontalAlignment="Right"
									Margin="0,-3,2,-1"
									Padding="0"
									Text="🛈"
									/>
						</Border>


					</Grid>

					<!-- </Border> -->


					<!-- save
					<Border Grid.Column="2"
							Grid.Row="1"
							Background="{StaticResource CanEdit.Bg.IsEditg}"
							BorderBrush="{StaticResource CanEdit.Bdr.IsEditg}"
							BorderThickness="1"
							CornerRadius="6"
							Margin="1"
					>
						<DockPanel HorizontalAlignment="Stretch">

							<TextBox DockPanel.Dock="Left"
									Foreground="{StaticResource CanEdit.Fg.IsEditg}"
									Text="D (Tbx) text/editable"
									TextAlignment="left"
									Style="{StaticResource TbxBase}"
							/>

							<TextBlock DockPanel.Dock="Right"
									FontFamily="Segoe UI Symbol"
									FontSize="{StaticResource FontSize.XLarge}"
									Foreground="{StaticResource CanEdit.Fg.IsEditg}"
									HorizontalAlignment="Right"
									Margin="0,-3,2,-1"
									Padding="0"
									Text="🛈"
							/>

							<Button Content=""
									DockPanel.Dock="Right"
									Foreground="{StaticResource CanEdit.Fg.IsEditg}"
									HorizontalAlignment="Right"
									Style="{StaticResource BtnEdit}"
							/>
						</DockPanel>
					</Border>
					-->


					<!--  E  -->
					<TextBlock Grid.Column="{StaticResource Action1_Col}"
							Grid.Row="{StaticResource Action1_Row}"
							Background="{StaticResource Action1.Bg.IsEditg}"
							Foreground="{StaticResource Action1.Fg.IsEditg}"
							Text="E action field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  F  -->
					<TextBlock Grid.Column="{StaticResource SubTitle_Col}"
							Grid.Row="{StaticResource SubTitle_Row}"
							Background="{StaticResource SubTitle.Bg.IsEditg}"
							Foreground="{StaticResource SubTitle.Fg.IsEditg}"
							Margin="1,1,1,0"
							Text="F action field sub-header"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  G  -->
					<StackPanel Grid.Column="{StaticResource Ckbx1_Col}"
							Grid.Row="{StaticResource Ckbx1_Row}"
							Grid.RowSpan="2"
							Background="{StaticResource SubTitle.Gb.IsEditg}"
							Margin="1,0,1,1"
							>

						<Border Background="{StaticResource Action2.Bg.IsEditg}"
								BorderBrush="{StaticResource Action2.Bdr.IsEditg}"
								BorderThickness="1"
								CornerRadius="6"
								Margin="5,3,5,0"
								>

							<DockPanel HorizontalAlignment="Stretch">

								<!--  G2  -->
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.IsEditg}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<!--  G  -->
								<CheckBox Content="checkbox text"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.IsEditg}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

						<!--  G  -->
						<Border Background="{StaticResource Action2.Bg.IsEditg}"
								BorderBrush="{StaticResource Action2.Bdr.IsEditg}"
								BorderThickness="1"
								CornerRadius="6"
								Margin="5,3,5,3"
								>

							<DockPanel HorizontalAlignment="Stretch">

								<!--  G2  -->
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.IsEditg}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<!--  G  -->
								<CheckBox Content="checkbox text"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.IsEditg}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

					</StackPanel>

					<!--  I  -->
					<TextBlock Grid.Column="{StaticResource Image_Col}"
							Grid.Row="{StaticResource Image_Row}"
							Background="{StaticResource Image1.Bg.IsSel}"
							Foreground="Black"
							Text="I image field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  J  -->
					<TextBlock Grid.Column="{StaticResource Hlight_Col}"
							Grid.Row="{StaticResource Hlight_Row}"
							Background="{StaticResource Hlight.Bg.IsSel}"
							Foreground="{StaticResource Hlight.Fg.IsSel}"
							Text="J Highlighted item"
							Style="{StaticResource TblkSamples}"
							/>

				</Grid>

			</Border>


			<!--  (D) is selected / not locked / no editing  -->
			<Border x:Key="IsSelectedNotLockedNoEditing"
					CornerRadius="4"
					Padding="4"
					>
				<Border.Style>
					<Style TargetType="Border">
						<Setter Property="IsEnabled" Value="True" />
						<Setter Property="Background" Value="{StaticResource Lv1.Item.Panel.Bkg.Nml}" />
					</Style>
				</Border.Style>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />

					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0"
							Grid.Row="0"
							Background="{StaticResource Header.Background}"
							Foreground="Black"
							Text="(D) is selected / not locked / no editing"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  A  -->
					<TextBlock Grid.Column="1"
							Grid.Row="0"
							Background="{StaticResource TitleNoEdit.Bg.NoEditg}"
							Foreground="{StaticResource TitleNoEdit.Fg.NoEditg}"
							Text="title text/not editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  B  -->
					<TextBlock Grid.Column="1"
							Grid.Row="1"
							Background="{StaticResource TitleCanEdit.Bg.NoEditg}"
							Foreground="{StaticResource TitleCanEdit.Fg.NoEditg}"
							Text="title text/editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  C  -->
					<TextBlock Grid.Column="2"
							Grid.Row="0"
							Background="{StaticResource NoEdit.Bg.NoEditg}"
							Foreground="{StaticResource NoEdit.Fg.NoEditg}"
							Text="(Tblk) text/not editable"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  D  -->
					<Border Grid.Column="2"
							Grid.Row="1"
							Background="{StaticResource CanEdit.Bg.NoEditg}"
							BorderBrush="{StaticResource CanEdit.Bdr.NoEditg}"
							BorderThickness="1"
							CornerRadius="6"
							Margin="1"
							>
						<DockPanel HorizontalAlignment="Stretch">


							<TextBox DockPanel.Dock="Left"
									Background="Transparent"
									BorderThickness="0"
									Foreground="{StaticResource CanEdit.Fg.NoEditg}"
									Text="(Tbx) text/editable"
									TextAlignment="left"
									Style="{StaticResource TbxBase}"
									/>

							<TextBlock DockPanel.Dock="Right">

								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="FontFamily" Value="Segoe UI Symbol" />
										<Setter Property="HorizontalAlignment" Value="Right" />
										<Setter Property="Margin" Value="0,-1,10,-3" />
										<Setter Property="Padding" Value="0" />
										<Setter Property="FontSize" Value="{StaticResource FontSize.Large}" />
										<Setter Property="Text" Value=" ⃠" />
										<!--  <Setter Property="Text" Value="&#x20E0;"  -->


										<Setter Property="Foreground" Value="{StaticResource CanEdit.Fg.NoEditg}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=win, Path=Resources[IsEditing]}" Value="{x:Null}">
												<Setter Property="Foreground" Value="Blue" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=win, Path=Resources[IsEditing]}" Value="false">
												<Setter Property="Foreground" Value="LawnGreen" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=win, Path=Resources[IsEditing]}" Value="true">
												<Setter Property="Foreground" Value="Red" />
											</DataTrigger>
											<!-- sadf
											<DataTrigger Binding="{Binding Source={x:Static local:Test.IsEditing}}" Value="{x:Null}">
												<Setter Property="Foreground" Value="blue"></Setter>
											</DataTrigger>
											<DataTrigger Binding="{Binding Source={x:Static local:Test.IsEditing}}" Value="false">
												<Setter Property="Foreground" Value="LawnGreen"></Setter>
											</DataTrigger>
											<DataTrigger Binding="{Binding Source={x:Static local:Test.IsEditing}}" Value="true">
												<Setter Property="Foreground" Value="red"></Setter>
											</DataTrigger>											-->

										</Style.Triggers>

									</Style>
								</TextBlock.Style>

							</TextBlock>

							<!--
							<Grid DockPanel.Dock="Right"
									HorizontalAlignment="Right"
									Margin="0"
									VerticalAlignment="Center"
									>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="16" />
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="16" />
								</Grid.RowDefinitions>

								circle slash
								<Path Grid.Column="0"
										Data="F0 M 18.886719 14.208984 C 18.886719 16.656902 18.019205 18.75 16.28418 20.488281 C 14.549153 22.226562 12.457682 23.095703 10.009766 23.095703 C 7.555339 23.095703 5.460612 22.226562 3.725586 20.488281 C 1.990561 18.75 1.123047 16.656902 1.123047 14.208984 C 1.123047 11.761068 1.990561 9.671225 3.725586 7.939453 C 5.460612 6.207683 7.555339 5.341797 10.009766 5.341797 C 12.457682 5.341797 14.549153 6.207683 16.28418 7.939453 C 18.019205 9.671225 18.886719 11.761068 18.886719 14.208984 Z M 10 7.021484 C 8.333334 7.021485 6.852214 7.535809 5.556641 8.564453 L 15.654297 18.671875 C 16.676432 17.376303 17.1875 15.888672 17.1875 14.208984 C 17.1875 12.223308 16.487629 10.528972 15.087891 9.125977 C 13.68815 7.722982 11.992188 7.021485 10 7.021484 Z M 4.365234 9.755859 C 3.323568 11.057943 2.802734 12.542318 2.802734 14.208984 C 2.802734 16.207684 3.505859 17.9069 4.912109 19.306641 C 6.318359 20.706381 8.014323 21.40625 10 21.40625 C 11.666666 21.40625 13.157552 20.888672 14.472656 19.853516 Z "
										Fill="{StaticResource Fg.IsSel.NoEdit}"
										HorizontalAlignment="Center"
										RenderTransformOrigin="0.5,0.5"
										Stretch="UniformToFill"
										VerticalAlignment="Center"
										/>

								pen
								<Path Grid.Column="0"
										Data="F0 M 17.93457 5.087891 C 18.188477 5.335287 18.362629 5.581055 18.457031 5.825195 C 18.551432 6.069336 18.598633 6.295573 18.598633 6.503906 C 18.598633 6.679688 18.574219 6.839193 18.525391 6.982422 C 18.476562 7.125652 18.426105 7.24935 18.374023 7.353516 C 18.302408 7.470703 18.227539 7.578125 18.149414 7.675781 C 18.110352 7.727865 18.055012 7.794598 17.983398 7.875977 C 17.911783 7.957357 17.836914 8.041992 17.758789 8.129883 C 17.680664 8.217773 17.604166 8.302409 17.529297 8.383789 C 17.454426 8.46517 17.394205 8.531901 17.348633 8.583984 C 17.244465 8.675131 17.127277 8.720704 16.99707 8.720703 C 16.866861 8.720704 16.743164 8.668621 16.625977 8.564453 L 14.604492 6.552734 C 14.500324 6.448568 14.448242 6.32487 14.448242 6.181641 C 14.448242 6.044922 14.49707 5.927734 14.594727 5.830078 C 14.640299 5.784506 14.70052 5.722657 14.775391 5.644531 C 14.85026 5.566406 14.930012 5.488281 15.014648 5.410156 C 15.099283 5.332031 15.180664 5.257162 15.258789 5.185547 C 15.336914 5.113934 15.405273 5.05534 15.463867 5.009766 C 15.568033 4.912109 15.685221 4.824219 15.81543 4.746094 C 15.926105 4.68099 16.056314 4.62077 16.206055 4.56543 C 16.355793 4.510092 16.518555 4.482422 16.694336 4.482422 C 16.876627 4.482422 17.071939 4.526367 17.280273 4.614258 C 17.488605 4.702148 17.706705 4.860027 17.93457 5.087891 Z M 15.756836 10.3125 L 6.176758 19.892578 L 3.305664 17.021484 L 12.885742 7.441406 Z M 1.391602 21.806641 L 2.368164 18.945312 L 4.243164 20.917969 Z"
										Fill="{StaticResource Fg.IsSel.NoEdit}"
										HorizontalAlignment="Center"
										Stretch="UniformToFill"
										VerticalAlignment="Center"
										>
									<Path.RenderTransform>
										<ScaleTransform CenterX="8"
												CenterY="8"
												ScaleX="0.75"
												ScaleY="0.75"
												/>
									</Path.RenderTransform>
								</Path>

							<Button Content=""
									DockPanel.Dock="Right"
									Foreground="{StaticResource Fg.IsSel.CanEdit}"
									HorizontalAlignment="Right"
									Visibility="Collapsed"
									Style="{StaticResource BtnEdit}"
									/>

							</Grid>							-->

							<Button Content=""
									DockPanel.Dock="Right"
									Foreground="{StaticResource CanEdit.Fg.IsSel}"
									HorizontalAlignment="Right"
									Visibility="Collapsed"
									Style="{StaticResource BtnEdit}"
									/>

						</DockPanel>
					</Border>

					<!--  E  -->
					<TextBlock Grid.Column="{StaticResource Action1_Col}"
							Grid.Row="{StaticResource Action1_Row}"
							Background="{StaticResource Action1.Bg.NoEditg}"
							Foreground="{StaticResource Action1.Fg.NoEditg}"
							Text="action field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  F  -->
					<TextBlock Grid.Column="{StaticResource SubTitle_Col}"
							Grid.Row="{StaticResource SubTitle_Row}"
							Background="{StaticResource SubTitle.Bg.NoEditg}"
							Foreground="{StaticResource SubTitle.Fg.NoEditg}"
							Margin="1,1,1,0"
							Text="action field sub-header"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  G  -->
					<StackPanel Grid.Column="{StaticResource Ckbx1_Col}"
							Grid.Row="{StaticResource Ckbx1_Row}"
							Grid.RowSpan="2"
							Background="{StaticResource SubTitle.Gb.NoEditg}"
							Margin="1,0,1,1"
							>

						<Border Background="{StaticResource Action2.Bg.NoEditg}"
								BorderBrush="{StaticResource Action2.Bdr.NoEditg}"
								BorderThickness="1"
								CornerRadius="6"
								Margin="5,3,5,0"
								>
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource Action2.Fg.NoEditg}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<CheckBox Content="checkbox text"
										DockPanel.Dock="Left"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.NoEditg}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

						<Border Background="{StaticResource Action2.Bg.NoEditg}"
								BorderBrush="{StaticResource Action2.Bdr.NoEditg}"
								BorderThickness="1"
								CornerRadius="6"
								Margin="5,3,5,3"
								>
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource Action2.Fg.NoEditg}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text=""
										/>

								<CheckBox Content="checkbox text"
										DockPanel.Dock="Left"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.NoEditg}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

					</StackPanel>

					<!--  I  -->
					<TextBlock Grid.Column="{StaticResource Image_Col}"
							Grid.Row="{StaticResource Image_Row}"
							Background="{StaticResource Image1.Bg.IsSel}"
							Foreground="Black"
							Text="image field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  J  -->
					<TextBlock Grid.Column="{StaticResource Hlight_Col}"
							Grid.Row="{StaticResource Hlight_Row}"
							Background="{StaticResource Hlight.Bg.IsSel}"
							Foreground="{StaticResource Hlight.Fg.IsSel}"
							Text="Highlighted item"
							Style="{StaticResource TblkSamples}"
							/>

				</Grid>

			</Border>


			<!--  (E) is selected / is locked / na editing  -->
			<Border x:Key="IsSelectedIsLockedNaEditing"
					CornerRadius="4"
					Padding="4"
					>
				<Border.Style>
					<Style TargetType="Border">
						<Setter Property="IsEnabled" Value="True" />
						<Setter Property="Background" Value="{StaticResource Lv1.Item.Panel.Bkg.Nml}" />
					</Style>
				</Border.Style>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />

					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0"
							Grid.Row="0"
							Background="{StaticResource Header.Background}"
							Foreground="Black"
							Text="(E) is selected / is locked / no editing"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  A  -->
					<TextBlock Grid.Column="1"
							Grid.Row="0"
							Background="{StaticResource TitleCanEdit.Bg.IsLocked}"
							Foreground="{StaticResource TitleCanEdit.Fg.IsLocked}"
							Text="title text/not editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  B  -->
					<TextBlock Grid.Column="1"
							Grid.Row="1"
							Background="{StaticResource TitleNoEdit.Bg.IsLocked}"
							Foreground="{StaticResource TitleNoEdit.Fg.IsLocked}"
							Text="title text/editable field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  C  -->
					<TextBlock Grid.Column="2"
							Grid.Row="0"
							Background="{StaticResource NoEdit.Bg.IsLocked}"
							Foreground="{StaticResource NoEdit.Fg.IsLocked}"
							Text="(Tblk) text/not editable"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  D  -->
					<Border Grid.Column="2"
							Grid.Row="1"
							Background="{StaticResource CanEdit.Bg.IsLocked}"
							BorderThickness="0"
							CornerRadius="6"
							Margin="1"
							>
						<DockPanel HorizontalAlignment="Stretch">

							<TextBox DockPanel.Dock="Left"
									Background="Transparent"
									BorderThickness="0"
									Foreground="{StaticResource CanEdit.Fg.IsLocked}"
									Text="(Tbx) text/editable"
									TextAlignment="left"
									Style="{StaticResource TbxBase}"
									/>

							<TextBlock DockPanel.Dock="Right"
									FontFamily="Segoe UI Symbol"
									Foreground="{StaticResource CanEdit.Fg.IsLocked}"
									HorizontalAlignment="Right"
									Margin="0,1,3,-1"
									Padding="0"
									Text="🔒"
									/>

							<Button Content=""
									DockPanel.Dock="Right"
									Foreground="{StaticResource CanEdit.Fg.IsLocked}"
									HorizontalAlignment="Right"
									Visibility="Collapsed"
									Style="{StaticResource BtnEdit}"
									/>

						</DockPanel>

					</Border>

					<!--  E  -->
					<TextBlock Grid.Column="{StaticResource Action1_Col}"
							Grid.Row="{StaticResource Action1_Row}"
							Background="{StaticResource Action1.Bg.IsLocked}"
							Foreground="{StaticResource Action1.Fg.IsLocked}"
							Text="action field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  F  -->
					<TextBlock Grid.Column="{StaticResource SubTitle_Col}"
							Grid.Row="{StaticResource SubTitle_Row}"
							Background="{StaticResource SubTitle.Bg.IsLocked}"
							Foreground="{StaticResource SubTitle.Fg.IsLocked}"
							Margin="1,1,1,0"
							Text="action field sub-header"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  G  -->
					<StackPanel Grid.Column="{StaticResource Ckbx1_Col}"
							Grid.Row="{StaticResource Ckbx1_Row}"
							Grid.RowSpan="2"
							Background="{StaticResource SubTitle.Gb.IsLocked}"
							Margin="1,0,1,1"
							>


						<Border Background="{StaticResource Action2.Bg.IsLocked}"
								CornerRadius="6"
								Margin="5,3,5,0"
								>
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.IsLocked}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text="🔒"
										/>

								<CheckBox Content="checkbox text"
										DockPanel.Dock="Left"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.IsLocked}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

						<Border Background="{StaticResource Action2.Bg.IsLocked}"
								CornerRadius="6"
								Margin="5,3,5,3"
								>
							<DockPanel HorizontalAlignment="Stretch">
								<TextBlock DockPanel.Dock="Right"
										FontFamily="Segoe UI Symbol"
										Foreground="{StaticResource CanEdit.Fg.IsLocked}"
										HorizontalAlignment="Right"
										Margin="0,1,3,-1"
										Padding="0"
										Text="🔒"
										/>

								<CheckBox Content="checkbox text"
										DockPanel.Dock="Left"
										FontSize="{StaticResource FontSize.Normal}"
										Foreground="{StaticResource Action2.Fg.IsLocked}"
										HorizontalAlignment="Left"
										IsChecked="True"
										Margin="5,0,0,0"
										Padding="0"
										VerticalAlignment="Center"
										>

									<CheckBox.Style>
										<Style BasedOn="{StaticResource Lv1.CheckboxStyle}"
												TargetType="CheckBox"
												/>
									</CheckBox.Style>
								</CheckBox>
							</DockPanel>
						</Border>

					</StackPanel>

					<!--  I  -->
					<TextBlock Grid.Column="{StaticResource Image_Col}"
							Grid.Row="{StaticResource Image_Row}"
							Background="{StaticResource Image1.Bg.IsSel}"
							Foreground="Black"
							Text="image field"
							Style="{StaticResource TblkSamples}"
							/>

					<!--  J  -->
					<TextBlock Grid.Column="{StaticResource Hlight_Col}"
							Grid.Row="{StaticResource Hlight_Row}"
							Background="{StaticResource Hlight.Bg.IsSel}"
							Foreground="{StaticResource Hlight.Fg.IsSel}"
							Text="Highlighted item"
							Style="{StaticResource TblkSamples}"
							/>


				</Grid>

			</Border>

			<!--#endregion-->

			<DataTemplate x:Key="HelpPopup">

				<Grid x:Name="PopupGrid"
						Background="Transparent"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="18" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="18" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0"
							Grid.Row="0"
							Background="DimGray"
							FontSize="{StaticResource FontSize.Large}"
							Foreground="White"
							Text="{Binding RelativeSource={RelativeSource Self},
														 Path=(cs:TestVisualStates.TitleText)}"
							/>

					<Rectangle Grid.Column="1"
							Grid.Row="1"
							Fill="Transparent"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							/>

					<Button x:Name="BtnClosePopup"
							Content="X"
							Grid.Column="1"
							Grid.Row="0"
							Background="DimGray"
							Foreground="White"
							>
					</Button>

					<TextBox Grid.Column="0"
							Grid.Row="1"
							Width="200"
							Background="DimGray"
							FontSize="{StaticResource FontSize.Large}"
							Foreground="White"
							IsReadOnly="True"
							Text="{Binding RelativeSource={RelativeSource Self},
														 Path=(cs:TestVisualStates.MainContent)}"
							TextAlignment="Left"
							TextWrapping="Wrap"
							/>

					<!--  <FlowDocumentScrollViewer  -->
					<!--  Margin="5"  -->
					<!--  Foreground="White"  -->
					<!--  BorderThickness="1"  -->
					<!--  BorderBrush="White"  -->
					<!--  Background="DimGray"  -->
					<!--  Width="200"  -->
					<!--    -->
					<!--  >  -->
					<!--  <FlowDocument  -->
					<!--    -->
					<!--  >  -->
					<!--  <Paragraph  -->
					<!--  FontSize="{StaticResource FontSize.Normal}"  -->
					<!--  Foreground="White"  -->
					<!--  >  -->
					<!-- 			<Run Text="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.MainContent)}"/> -->
					<!-- 		</Paragraph> -->
					<!-- 	</FlowDocument> -->
					<!--    -->
					<!-- </FlowDocumentScrollViewer> -->


					<!--  <TextBlock x:Name="tbx1"  -->
					<!--  Grid.Column="0"  -->
					<!--  Grid.Row="1"  -->
					<!--  Grid.ColumnSpan="2"  -->
					<!--  Width="100"  -->
					<!--  Background="BurlyWood"  -->
					<!--  Focusable="False"  -->
					<!--  Foreground="Black"  -->
					<!--  Text="{Binding RelativeSource={RelativeSource Self}, Path=(cs:TestVisualStates.MainContent)}"  -->
					<!--  TextWrapping="Wrap"  -->
					<!--  />  -->



				</Grid>
			</DataTemplate>




			<!-- </DataTemplate> -->

			<!--  not locked / is selected / not editing  -->
			<!--  base values  -->
			<DataTemplate x:Key="Base">

				<StackPanel x:Name="stackPanel"
						DataContext="{Binding ElementName=win}"
						Orientation="Vertical"
						>

					<!--#region > settings info-->

					<StackPanel Orientation="Horizontal">

						<TextBlock Margin="10,0,0,0"
								Text="Is Selected|"
								/>
						<TextBlock Width="30"
								HorizontalAlignment="Stretch"
								Margin="5,0,0,0"
								TextAlignment="Center"
								>
							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Setter Property="Text" Value="No" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
											<Setter Property="Text" Value="Yes" />
											<Setter Property="Background" Value="GreenYellow" />
											<Setter Property="Foreground" Value="Black" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>

						<TextBlock Margin="10,0,0,0"
								Text="Is Editing|"
								/>
						<TextBlock Width="30"
								HorizontalAlignment="Stretch"
								Margin="5,0,0,0"
								TextAlignment="Center"
								>
							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Setter Property="Text" Value="No" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsEditing}" Value="True">
											<Setter Property="Text" Value="Yes" />
											<Setter Property="Background" Value="GreenYellow" />
											<Setter Property="Foreground" Value="Black" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>


						<TextBlock Margin="10,0,0,0"
								Text="Is NoEditing|"
								/>
						<TextBlock Width="30"
								HorizontalAlignment="Stretch"
								Margin="5,0,0,0"
								TextAlignment="Center"
								>
							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Setter Property="Text" Value="No" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding NoEditing}" Value="True">
											<Setter Property="Text" Value="Yes" />
											<Setter Property="Background" Value="GreenYellow" />
											<Setter Property="Foreground" Value="Black" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>

						<TextBlock Margin="10,0,0,0"
								Text="Is Locked|"
								/>
						<TextBlock Width="30"
								HorizontalAlignment="Stretch"
								Margin="5,0,0,0"
								TextAlignment="Center"
								>
							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Setter Property="Text" Value="No" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsLocked}" Value="True">
											<Setter Property="Text" Value="Yes" />
											<Setter Property="Background" Value="GreenYellow" />
											<Setter Property="Foreground" Value="Black" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>

					</StackPanel>

					<!--#endregion-->

					<Border CornerRadius="4"
							IsEnabled="{Binding ElementName=win,
																	Path=IsSelected}"
							Padding="4"
							>

						<Grid>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*" />
								<ColumnDefinition Width="3*" />
								<ColumnDefinition Width="3*" />
								<ColumnDefinition Width="3*" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="{StaticResource Lv1RowHeight}" />
								<RowDefinition Height="{StaticResource Lv1RowHeight}" />
								<RowDefinition Height="{StaticResource Lv1RowHeight}" />
								<RowDefinition Height="{StaticResource Lv1RowHeight}" />

							</Grid.RowDefinitions>

							<TextBlock Grid.Column="0"
									Grid.Row="0"
									Grid.ColumnSpan="2"
									Text="(Base)"
									>
								<TextBlock.Style>
									<Style BasedOn="{StaticResource TblkSamples}"
											TargetType="{x:Type TextBlock}"
											>
										<Setter Property="Background" Value="{StaticResource Header.Background}" />
										<Setter Property="Foreground" Value="Black" />
									</Style>
								</TextBlock.Style>
							</TextBlock>


							<!--  BASE CONDITION: not locked / not selected / not editing  -->

							<Border x:Name="BdrId"
									Grid.Column="0"
									Grid.Row="1"
									Grid.RowSpan="2"
									cs:TestVisualStates.BgDefault="{StaticResource Id.Bg.NotSel}"
									cs:TestVisualStates.BgIsSelected="{StaticResource Id.Bg.IsSel}"
									Style="{StaticResource BdrIsSelectedTrigger}"
									>
								<Grid>

									<TextBlock Grid.Column="0"
											Grid.Row="0"
											FontSize="40"
											HorizontalAlignment="Center"
											Margin="0,-4,0,4"
											Text="1"
											VerticalAlignment="Center"
											cs:TestVisualStates.FgDefault="{StaticResource Id.Fg.NotSel}"
											cs:TestVisualStates.FgIsSelected="{StaticResource Id.Fg.IsSel}"
											Style="{StaticResource TblkIsSelectedTrigger}"
											/>

									<Path x:Name="PthCanEditIconx"
											Grid.Column="0"
											Grid.Row="0"
											Width="10"
											Margin="0,0,5,5"
											VerticalAlignment="Bottom"
											cs:TestVisualStates.FgDefault="{StaticResource IdIcon.Fg.NotSel}"
											cs:TestVisualStates.FgIsSelected="{StaticResource IdIcon.Fg.IsSel}"
											cs:TestVisualStates.IconGeometryDefault="{StaticResource IconGeomIsLocked}"
											Style="{StaticResource PathIsSelectedTrigger}"
											/>

								</Grid>

							</Border>


							<!--  A  (done)  -->
							<Border x:Name="BdrTitleNoEd"
									Grid.Column="2"
									Grid.Row="0"
									Style="{StaticResource BdrAllTrigTitleNoEd}"
									>
								<!--  Style="{StaticResource BdrAllTriggers}"  -->

								<TextBlock x:Name="TblkTitleNoEd"
										Text="A title text/not editable field"
										Style="{StaticResource TblkAllTrigTitleNoEd}"
										>
									<!--  Style="{StaticResource TblkAllTriggers}"  -->
								</TextBlock>
							</Border>

							<!--  B  (done)  -->
							<Border x:Name="BdrCanEd"
									Grid.Column="2"
									Grid.Row="1"
									Style="{StaticResource BdrAllTrigCanEd}"
									>
								<!--  Style="{StaticResource BdrAllTriggers}"  -->

								<TextBlock x:Name="TblkCanEd"
										Text="B title text/editable field"
										Style="{StaticResource TblkAllTrigCanEd}"
										/>
								<!--  Style="{StaticResource TblkAllTriggers}"  -->
							</Border>

							<!--  C  (done)  -->
							<Border x:Name="BdNoEd"
									Grid.Column="3"
									Grid.Row="0"
									Style="{StaticResource BdrAllTrigNoEd}"
									>
								<!--  Style="{StaticResource BdrAllTriggers}"  -->

								<TextBlock x:Name="TblkInfoEd"
										Text="C (Tblk) text/not editable"
										Style="{StaticResource TblkAllTrigNoEd}"
										/>
								<!--  Style="{StaticResource TblkAllTriggers}"  -->
							</Border>

							<!--  D  -->
							<!--  <Border x:Name="BdrCanEdit"  -->
							<!--  Grid.Column="3"  -->
							<!--  Grid.Row="1"  -->
							<!--  cs:TestVisualStates.BgDefault="{StaticResource CanEdit.Bg.NotSel}"  -->
							<!--  cs:TestVisualStates.BgIsEditing="{StaticResource CanEdit.Bg.IsEditg}"  -->
							<!--  cs:TestVisualStates.BgIsLocked="{StaticResource CanEdit.Bg.IsLocked}"  -->
							<!--  cs:TestVisualStates.BgIsSelected="{StaticResource CanEdit.Bg.IsSel}"  -->
							<!--  cs:TestVisualStates.BgNoEditing="{StaticResource CanEdit.Bg.NoEditg}"  -->
							<!--    -->
							<!--  Style="{StaticResource BdrAllTriggers}"  -->
							<!--  >  -->


							<Grid Grid.Column="3"
									Grid.Row="1"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center"
									>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Border Grid.Column="0"
										BorderThickness="1,1,0,1"
										CornerRadius="6,0,0,6"
										Margin="1,1,0,1"
										Style="{StaticResource BdrAllTrigCanEdit}"
										>

									<!--  D  -->
									<StackPanel>

										<TextBox x:Name="TbxCanEdit"
												Text="D (Tbx) text/editable"
												Style="{StaticResource TbxAllTrigsCanEdit}"
												/>


										<Popup Name="PuCanEdit"
												AllowsTransparency="True"
												Button.Click="BtnPopupClose_OnClick"
												DataContext="{Binding DataContext,
																							ElementName=stackPanel}"
												HorizontalAlignment="Right"
												HorizontalOffset="4"
												Margin="10"
												MouseEnter="Popup_OnMouseEnter"
												MouseLeave="Popup_OnMouseLeave"
												Placement="Bottom"
												PlacementTarget="{Binding ElementName=TbxCanEdit,
																									Mode=OneWay}"
												VerticalOffset="2"
												cs:TestVisualStates.MainContent="This is the main content and help information\nfirst item\nthis is the first item of help"
												cs:TestVisualStates.TitleText="Can Edit Help"
												>


												<ContentPresenter Content="{StaticResource HelpPopup}"></ContentPresenter>

										</Popup>

									</StackPanel>



								</Border>

								<Border Grid.Column="1"
										BorderThickness="0,1,0,1"
										CornerRadius="0"
										Margin="0,1,0,1"
										Style="{StaticResource BdrAllTrigCanEditIcon}"
										>
									<!--  cs:TestVisualStates.BgDefault="{StaticResource CanEdit.Bg.NotSel}"  -->
									<!--  cs:TestVisualStates.BgIsEditing="{StaticResource CanEdit.Bg.IsEditg}"  -->
									<!--  cs:TestVisualStates.BgIsLocked="{StaticResource CanEdit.Bg.IsLocked}"  -->
									<!--  cs:TestVisualStates.BgIsSelected="{StaticResource CanEdit.Bg.IsSel}"  -->
									<!--  cs:TestVisualStates.BgNoEditing="{StaticResource CanEdit.Bg.NoEditg}"  -->
									<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
									<!--  cs:TestVisualStates.MoIsEditing="{StaticResource CanEdit.Icon.Mo.IsEditg}"  -->

									<!--  D1  -->
									<Button x:Name="BtnCanEditClear"
											Content="&#xE106;"
											DockPanel.Dock="Right"
											Foreground="{StaticResource CanEdit.Fg.IsSel}"
											HorizontalAlignment="Right"
											Margin="2,0,2,0"
											Click="BtnCanEditClear_OnClick"
											>
										<Button.Style>
											<Style BasedOn="{StaticResource BtnEdit}"
													TargetType="Button"
													>
												<Setter Property="Visibility" Value="Collapsed">
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding ElementName=win, Path=IsEditing}" Value="True">
														<Setter Property="Visibility" Value="Visible" />
													</DataTrigger>
												</Style.Triggers>

											</Style>
										</Button.Style>
									</Button>
								</Border>

								<Border Grid.Column="2"
										BorderThickness="0,1,1,1"
										CornerRadius="0,6,6,0"
										Margin="0,1,1,1"
										MouseDown="PopupCanEdit_MouseDown"
										Style="{StaticResource BdrAllTrigCanEditIcon}"
										>


									<Path x:Name="PthCanEditIcon"
											Style="{StaticResource PathAllTriggersFixedIconsCanEdit}"
											>
										<!--  MouseDown="PopupCanEdit_MouseDown"  -->

									</Path>


								</Border>
							</Grid>

							<!-- </Border> -->

							<!--  E  (done)
							<Border x:Name="BdrAction1"

									cs:TestVisualStates.BgDefault="{StaticResource Action1.Bg.NotSel}"
									cs:TestVisualStates.BgIsEditing="{StaticResource Action1.Bg.IsEditg}"
									cs:TestVisualStates.BgIsLocked="{StaticResource Action1.Bg.IsLocked}"
									cs:TestVisualStates.BgIsSelected="{StaticResource Action1.Bg.IsSel}"
									cs:TestVisualStates.BgNoEditing="{StaticResource Action1.Bg.NoEditg}"
									cs:TestVisualStates.DoesMouseOver="True"
									cs:TestVisualStates.MoIsEditing="{StaticResource Action1.Mo.IsEditg}"
									Style="{StaticResource BdrAllTriggers}"
									>							-->
							<Grid Grid.Column="2"
									Grid.Row="2"
									>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Border x:Name="BdrAction1"
										Grid.Column="0"
										BorderThickness="1,1,0,1"
										CornerRadius="6,0,0,6"
										Margin="1,1,0,1"
										Style="{StaticResource BdrAllTrigAction1}"
										>
									<!--  cs:TestVisualStates.BgDefault="{StaticResource Action1.Bg.NotSel}"  -->
									<!--  cs:TestVisualStates.BgIsEditing="{StaticResource Action1.Bg.IsEditg}"  -->
									<!--  cs:TestVisualStates.BgIsLocked="{StaticResource Action1.Bg.IsLocked}"  -->
									<!--  cs:TestVisualStates.BgIsSelected="{StaticResource Action1.Bg.IsSel}"  -->
									<!--  cs:TestVisualStates.BgNoEditing="{StaticResource Action1.Bg.NoEditg}"  -->
									<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
									<!--  cs:TestVisualStates.MoIsEditing="{StaticResource Action1.Mo.IsEditg}"  -->
									<!--  Style="{StaticResource BdrAllTriggers}"  -->
									<!--  >  -->
									<StackPanel>
										<TextBlock x:Name="TblkAction1"
												Text="E action field"
												Style="{StaticResource TblkAllTrigAction1}"
												/>



										<Popup Name="PuAction1"
												AllowsTransparency="True"
												Button.Click="BtnPopupClose_OnClick"
												DataContext="{Binding DataContext,
																							ElementName=stackPanel}"
												HorizontalAlignment="Right"
												HorizontalOffset="4"
												Margin="10"
												MouseEnter="Popup_OnMouseEnter"
												MouseLeave="Popup_OnMouseLeave"
												Placement="Bottom"
												PlacementTarget="{Binding ElementName=TblkAction1,
																									Mode=OneWay}"
												VerticalOffset="2"
												cs:TestVisualStates.MainContent="This is the main content and help              information for action1&#013;first item&#013;this is              the first item of help"
												cs:TestVisualStates.TitleText="Action1 Help"
												>
											<Popup.Effect>
												<DropShadowEffect BlurRadius="50"
														Color="Black"
														ShadowDepth="20"
														/>
											</Popup.Effect>

											<Popup.Child>
														<ContentControl Content="{StaticResource HelpPopup}" />
											</Popup.Child>

										</Popup>





									</StackPanel>
								</Border>


								<Border Grid.Column="1"
										BorderThickness="0,1,1,1"
										CornerRadius="0,6,6,0"
										Margin="0,1,1,1"
										MouseDown="PopupAction1_MouseDown"
										Style="{StaticResource BdrAllTrigAction1Icon}"
										>
									<!--  cs:TestVisualStates.BgDefault    ="{StaticResource Action1.Bg.NotSel}"  -->
									<!--  cs:TestVisualStates.BgIsEditing  ="{StaticResource Action1.Bg.IsEditg}"  -->
									<!--  cs:TestVisualStates.BgIsLocked   ="{StaticResource Action1.Bg.IsLocked}"  -->
									<!--  cs:TestVisualStates.BgIsSelected ="{StaticResource Action1.Bg.IsSel}"  -->
									<!--  cs:TestVisualStates.BgNoEditing  ="{StaticResource Action1.Bg.NoEditg}"  -->
									<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
									<!--  cs:TestVisualStates.MoIsEditing  ="{StaticResource Action1.Icon.Mo.IsEditg}"  -->

									<Border.Resources>
										<Style x:Key="PathStyle"
												TargetType="Path"
												>

										</Style>
									</Border.Resources>
									<Path x:Name="PathAction1Icon"
											Style="{StaticResource PathAllTriggersFixedIconsAction1}"
											/>
									<!--  Style="{StaticResource PathAllTriggersFixedIcons}"  -->
								</Border>
							</Grid>

							<!-- </Border> -->

							<!--  G  -->
							<StackPanel x:Name="SpAction2"
									Grid.Column="1"
									Grid.Row="1"
									Grid.RowSpan="3"
									Margin="1,0,1,1"
									Style="{StaticResource StkPnlAllTrigsSpAction2}"
									>
								<!--  Style="{StaticResource StkPnlAllTriggers}"  -->

								<!--  F  (done)  -->
								<StackPanel.Resources>
									<Style x:Key="BorderStyle"
											TargetType="Border"
											>

									</Style>
								</StackPanel.Resources>
								<Border x:Name="BdrSubTitle"
										Height="22"
										Margin="5,3,5,0"
										Style="{StaticResource BdrAllTrigSubTitle}"
										>


									<TextBlock x:Name="TblkSubTitle"
											Margin="1,1,1,0"
											Text="F action field sub-header"
											Style="{StaticResource TblkAllTrigSubTitle}"
											/>
									<!--  Style="{StaticResource TblkAllTriggers}"  -->
								</Border>

								<!--  G
								<Border x:Name="BdrAction2_1"
										Height="22"
										Margin="5,3,5,0"
										cs:TestVisualStates.BgDefault="{StaticResource Action2.Bg.NotSel}"
										cs:TestVisualStates.BgIsEditing="{StaticResource Action2.Bg.IsEditg}"
										cs:TestVisualStates.BgIsLocked="{StaticResource Action2.Bg.IsLocked}"
										cs:TestVisualStates.BgIsSelected="{StaticResource Action2.Bg.IsSel}"
										cs:TestVisualStates.BgNoEditing="{StaticResource Action2.Bg.NoEditg}"
										cs:TestVisualStates.DoesMouseOver="True"
										cs:TestVisualStates.MoIsEditing="{StaticResource Action2.Mo.IsEditg}"
										Style="{StaticResource BdrAllTriggers}"
										>
										-->

								<Grid Height="22"
										HorizontalAlignment="Stretch"
										Margin="5,2,5,0"
										VerticalAlignment="Center"
										>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Border Grid.Column="0"
											BorderThickness="1,1,0,1"
											CornerRadius="6,0,0,6"
											Margin="0"
											Style="{StaticResource BdrAllTrigAction2}"
											>
										<!--  cs:TestVisualStates.BgDefault     ="{StaticResource Action2.Bg.NotSel}"  -->
										<!--  cs:TestVisualStates.BgIsEditing   ="{StaticResource Action2.Bg.IsEditg}"  -->
										<!--  cs:TestVisualStates.BgIsLocked    ="{StaticResource Action2.Bg.IsLocked}"  -->
										<!--  cs:TestVisualStates.BgIsSelected  ="{StaticResource Action2.Bg.IsSel}"  -->
										<!--  cs:TestVisualStates.BgNoEditing   ="{StaticResource Action2.Bg.NoEditg}"  -->
										<!--  cs:TestVisualStates.DoesMouseOver ="True"  -->
										<!--  cs:TestVisualStates.MoIsEditing   ="{StaticResource Action2.Mo.IsEditg}"  -->

										<!--  G  -->
										<CheckBox x:Name="CbxAction2_1"
												Content="G checkbox text"
												IsChecked="True"
												Margin="6,0,0,0"
												cs:CsCheckBoxAp.CheckBoxBoxMargin="0,0,10,0"
												Style="{StaticResource CbxAllTriggersCbx}"
												/>
										<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
										<!--  cs:TestVisualStates.FgDefault="{StaticResource Action2.Fg.NotSel}"  -->
										<!--  cs:TestVisualStates.FgIsEditing="{StaticResource Action2.Fg.IsEditg}"  -->
										<!--  cs:TestVisualStates.FgIsLocked="{StaticResource Action2.Fg.IsLocked}"  -->
										<!--  cs:TestVisualStates.FgIsSelected="{StaticResource Action2.Fg.IsSel}"  -->
										<!--  cs:TestVisualStates.FgNoEditing="{StaticResource Action2.Fg.NoEditg}"  -->
										<!--  cs:TestVisualStates.MoIsEditing="{StaticResource Action2.Mo.IsEditg}"  -->


									</Border>


									<Border Grid.Column="1"
											BorderThickness="0,1,1,1"
											CornerRadius="0,6,6,0"
											Margin="0"
											Style="{StaticResource BdrAllTrigAction2Icon}"
											>
										<!--  cs:TestVisualStates.BgDefault="{StaticResource Action2.Bg.NotSel}"  -->
										<!--  cs:TestVisualStates.BgIsEditing="{StaticResource Action2.Bg.IsEditg}"  -->
										<!--  cs:TestVisualStates.BgIsLocked="{StaticResource Action2.Bg.IsLocked}"  -->
										<!--  cs:TestVisualStates.BgIsSelected="{StaticResource Action2.Bg.IsSel}"  -->
										<!--  cs:TestVisualStates.BgNoEditing="{StaticResource Action2.Bg.NoEditg}"  -->
										<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
										<!--  cs:TestVisualStates.MoIsEditing="{StaticResource Action2.Icon.Mo.IsEditg}"  -->

										<!--  G2  -->
										<Path x:Name="PthAction2_1Icon"
												Margin="4"
												Style="{StaticResource PathAllTriggersFixedIconsAction2}"
												/>
										<!--  cs:TestVisualStates.FgDefault="{StaticResource Action2.Fg.NotSel}"  -->
										<!--  cs:TestVisualStates.FgIsEditing="{StaticResource Action2.Fg.IsEditg}"  -->
										<!--  cs:TestVisualStates.FgIsLocked="{StaticResource Action2.Fg.IsLocked}"  -->
										<!--  cs:TestVisualStates.FgIsSelected="{StaticResource Action2.Fg.IsSel}"  -->
										<!--  cs:TestVisualStates.FgNoEditing="{StaticResource Action2.Fg.NoEditg}"  -->

									</Border>



								</Grid>
								<!-- </Border> -->


								<!--  G
								<Border x:Name="BdrAction2_2"
										Height="22"
										Margin="5,3,5,0"
										cs:TestVisualStates.BgDefault="{StaticResource Action2.Bg.NotSel}"
										cs:TestVisualStates.BgIsEditing="{StaticResource Action2.Bg.IsEditg}"
										cs:TestVisualStates.BgIsLocked="{StaticResource Action2.Bg.IsLocked}"
										cs:TestVisualStates.BgIsSelected="{StaticResource Action2.Bg.IsSel}"
										cs:TestVisualStates.BgNoEditing="{StaticResource Action2.Bg.NoEditg}"
										cs:TestVisualStates.DoesMouseOver="True"
										cs:TestVisualStates.MoIsEditing="{StaticResource Action2.Mo.IsEditg}"
										Style="{StaticResource BdrAllTriggers}"
										>
									-->
								<Grid Height="22"
										HorizontalAlignment="Stretch"
										Margin="5,2,5,0"
										VerticalAlignment="Center"
										>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>


									<Border Grid.Column="0"
											BorderThickness="1,1,0,1"
											CornerRadius="6,0,0,6"
											Margin="0"
											Style="{StaticResource BdrAllTrigAction2}"
											>
										<!--  cs:TestVisualStates.BgDefault="{StaticResource Action2.Bg.NotSel}"  -->
										<!--  cs:TestVisualStates.BgIsEditing="{StaticResource Action2.Bg.IsEditg}"  -->
										<!--  cs:TestVisualStates.BgIsLocked="{StaticResource Action2.Bg.IsLocked}"  -->
										<!--  cs:TestVisualStates.BgIsSelected="{StaticResource Action2.Bg.IsSel}"  -->
										<!--  cs:TestVisualStates.BgNoEditing="{StaticResource Action2.Bg.NoEditg}"  -->
										<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
										<!--  cs:TestVisualStates.MoIsEditing="{StaticResource Action2.Mo.IsEditg}"  -->


										<!--  G  -->
										<CheckBox x:Name="CbxAction2_2"
												Content="G checkbox text"
												DockPanel.Dock="Left"
												IsChecked="True"
												Margin="6,0,0,0"
												cs:CsCheckBoxAp.CheckBoxBoxMargin="0,0,10,0"
												Style="{StaticResource CbxAllTriggersCbx}"
												/>
										<!--  cs:TestVisualStates.FgDefault="{StaticResource Action2.Fg.NotSel}"  -->
										<!--  cs:TestVisualStates.FgIsEditing="{StaticResource Action2.Fg.IsEditg}"  -->
										<!--  cs:TestVisualStates.FgIsLocked="{StaticResource Action2.Fg.IsLocked}"  -->
										<!--  cs:TestVisualStates.FgIsSelected="{StaticResource Action2.Fg.IsSel}"  -->
										<!--  cs:TestVisualStates.FgNoEditing="{StaticResource Action2.Fg.NoEditg}"  -->

									</Border>

									<Border Grid.Column="1"
											BorderThickness="0,1,1,1"
											CornerRadius="0,6,6,0"
											Margin="0"
											Style="{StaticResource BdrAllTrigAction2Icon}"
											>
										<!--  cs:TestVisualStates.BgDefault="{StaticResource Action2.Bg.NotSel}"  -->
										<!--  cs:TestVisualStates.BgIsEditing="{StaticResource Action2.Bg.IsEditg}"  -->
										<!--  cs:TestVisualStates.BgIsLocked="{StaticResource Action2.Bg.IsLocked}"  -->
										<!--  cs:TestVisualStates.BgIsSelected="{StaticResource Action2.Bg.IsSel}"  -->
										<!--  cs:TestVisualStates.BgNoEditing="{StaticResource Action2.Bg.NoEditg}"  -->
										<!--  cs:TestVisualStates.DoesMouseOver="True"  -->
										<!--  cs:TestVisualStates.MoIsEditing="{StaticResource Action2.Icon.Mo.IsEditg}"  -->

										<!--  G2  -->
										<Path x:Name="PthAction2_2Icon"
												DockPanel.Dock="Right"
												Margin="4"
												Style="{StaticResource PathAllTriggersFixedIconsAction2}"
												/>
										<!--  cs:TestVisualStates.FgDefault="{StaticResource Action2.Fg.NotSel}"  -->
										<!--  cs:TestVisualStates.FgIsEditing="{StaticResource Action2.Fg.IsEditg}"  -->
										<!--  cs:TestVisualStates.FgIsLocked="{StaticResource Action2.Fg.IsLocked}"  -->
										<!--  cs:TestVisualStates.FgIsSelected="{StaticResource Action2.Fg.IsSel}"  -->
										<!--  cs:TestVisualStates.FgNoEditing="{StaticResource Action2.Fg.NoEditg}"  -->

									</Border>

								</Grid>
								<!-- </Border> -->


							</StackPanel>


							<!--  I  (done)  -->
							<Border x:Name="BdrImage"
									Grid.Column="2"
									Grid.Row="3"
									cs:TestVisualStates.BgDefault="{StaticResource Image1.Bg.NotSel}"
									cs:TestVisualStates.BgIsSelected="{StaticResource Image1.Bg.IsSel}"
									Style="{StaticResource BdrIsSelectedTrigger}"
									>
								<TextBlock x:Name="TblkImage"
										Text="I image field"
										cs:TestVisualStates.FgDefault="Black"
										cs:TestVisualStates.FgIsSelected="Black"
										Style="{StaticResource TblkIsSelectedTrigger}"
										/>
							</Border>

							<!--  J  (done)  -->
							<Border x:Name="BdrHlight"
									Grid.Column="3"
									Grid.Row="2"
									cs:TestVisualStates.BgDefault="{StaticResource Hlight.Bg.NotSel}"
									cs:TestVisualStates.BgIsSelected="{StaticResource Hlight.Bg.IsSel}"
									Style="{StaticResource BdrIsSelectedTrigger}"
									>
								<TextBlock x:Name="TblkHlight"
										Text="J Highlighted item"
										cs:TestVisualStates.FgDefault="{StaticResource Hlight.Fg.NotSel}"
										cs:TestVisualStates.FgIsSelected="{StaticResource Hlight.Fg.IsSel}"
										Style="{StaticResource TblkIsSelectedTrigger}"
										/>
							</Border>

						</Grid>


					</Border>

				</StackPanel>

			</DataTemplate>



		</ResourceDictionary>

	</Window.Resources>

	<Grid x:Name="PrimeGrid"
			Margin="10"
			>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="{StaticResource C1}" />
			<ColumnDefinition Width="{StaticResource C2}" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!--#region > dialog controls-->

		<StackPanel x:Name="DialogControls"
				DockPanel.Dock="Bottom"
				Grid.Column="0"
				Grid.Row="1"
				Grid.ColumnSpan="2"
				HorizontalAlignment="Right"
				Orientation="Horizontal"
				VerticalAlignment="Bottom"
				>

			<Button Content="Cancel"
					FontSize="{StaticResource FontSize.Normal}"
					HorizontalAlignment="Right"
					Margin="5,10,0,0"
					MinHeight="28"
					MinWidth="90"
					Padding="5"
					Style="{StaticResource Button.Normal.Style}"
					/>

			<Button Content="Done"
					FontSize="{StaticResource FontSize.Normal}"
					HorizontalAlignment="Right"
					Margin="5,10,0,0"
					MinHeight="28"
					MinWidth="90"
					Padding="5"
					Style="{StaticResource Button.Normal.Style}"
					Click="BtnDone_OnClick"
					/>

		</StackPanel>

		<!--#endregion-->

		<!--#region > column left-->

		<DockPanel x:Name="ColumnLeft"
				Grid.Column="0"
				Grid.Row="0"
				Margin="0,0,5,0"
				>

			<Border x:Name="Header_1L"
					DockPanel.Dock="Top"
					Background="DimGray"
					BorderThickness="0"
					CornerRadius="{StaticResource Normal.CornerRadius}"
					Margin="0,0,0,3"
					VerticalAlignment="Top"
					>
				<TextBlock FontSize="{StaticResource FontSize.Large}"
						Padding="5,0,0,3"
						Text="Header 1"
						/>

			</Border>

			<Border DockPanel.Dock="Left"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					>
				<StackPanel Orientation="Vertical">

					<CheckBox x:Name="Cbx_Selected"
							Content="Is Selected?"
							Height="34"
							FontSize="24"
							IsChecked="{Binding IsSelected}"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>

					<CheckBox x:Name="Cbx_Editing"
							Content="Is Editing?"
							Height="34"
							FontSize="24"
							IsChecked="{Binding IsEditing}"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>

					<CheckBox x:Name="Cbx_NoEditing"
							Content="Is NoEditing?"
							Height="34"
							FontSize="24"
							IsChecked="{Binding NoEditing}"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>

					<CheckBox x:Name="Cbx_Locked"
							Content="Is Locked?"
							Height="34"
							FontSize="24"
							IsChecked="{Binding IsLocked}"
							Style="{StaticResource Lv1.CheckboxStyle}"
							/>

				</StackPanel>


			</Border>

		</DockPanel>

		<!--#endregion-->

		<!--#region > column right-->

		<DockPanel x:Name="ColumnRight"
				Grid.Column="1"
				Grid.Row="0"
				>

			<Border x:Name="Header_1R"
					DockPanel.Dock="Top"
					Background="DimGray"
					BorderThickness="0"
					CornerRadius="{StaticResource Normal.CornerRadius}"
					Margin="0,0,0,3"
					VerticalAlignment="Top"
					>
				<TextBlock FontSize="{StaticResource FontSize.Large}"
						Padding="5,0,0,3"
						Text="Header 1"
						/>
			</Border>

			<StackPanel x:Name="ItemSamples"
					Orientation="Vertical"
					>

				<TextBlock x:Name="Header_2R"
						Background="{StaticResource Header.Background}"
						Foreground="Black"
						Text="This is header text"
						Style="{StaticResource TblkSamples}"
						/>

				<ContentControl x:Name="Row1"
						ContentTemplate="{StaticResource Sample}"
						/>

				<ContentControl x:Name="Row5"
						Content="{StaticResource NotSelectedNotLockedNaEditing}"
						/>

				<ContentControl x:Name="Row3"
						Content="{StaticResource IsSelectedNotLockedNotEditing}"
						/>

				<ContentControl x:Name="Row4"
						Content="{StaticResource IsSelectedNotLockedIsEditing}"
						/>

				<ContentControl x:Name="Row6"
						Content="{StaticResource IsSelectedNotLockedNoEditing}"
						/>

				<ContentControl x:Name="Row7"
						Content="{StaticResource IsSelectedIsLockedNaEditing}"
						/>

				<!--<ContentControl
					x:Name="Base"

					Content="{StaticResource Base}" />-->

				<ContentControl x:Name="Base"
						ContentTemplate="{StaticResource Base}"
						Margin="0,50,0,0"
						/>

			</StackPanel>


		</DockPanel>

		<!--#endregion-->

	</Grid>


</Window>
